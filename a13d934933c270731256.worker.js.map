{"version":3,"sources":["../webpack/bootstrap","../node_modules/assert/assert.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/decimal.js-light/decimal.js","../node_modules/dateformat/lib/dateformat.js","../node_modules/webpack/buildin/global.js","../node_modules/object-assign/index.js","../node_modules/util/util.js","../node_modules/process/browser.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/util/node_modules/inherits/inherits_browser.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/comlink.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","config.ts","types/Amount.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/utils.ts","types/Ledger/LedgerAccount.ts","services/memoize.ts","types/Ledger/LedgerScheme.ts","types/Journal/EntryLeg.ts","types/DateString.ts","types/Period.ts","types/VAT/VATRate.ts","types/VAT/VATHistory.ts","types/VAT/VATRates.ts","types/VAT/VATLine.ts","types/VAT/VATDeclarationItem.ts","types/VAT/VATDeclaration.ts","types/Journal/JournalEntry.ts","types/DataMapping.ts","types/Journal/Journal.ts","types/LiquidAssets/AccountBalance.ts","types/LiquidAssets/AccountStatement.ts","types/LiquidAssets/StatementEntry.ts","types/LiquidAssets/StatementEntryMap.ts","types/IBAN.ts","types/LiquidAssets/AccountStatementMap.ts","types/LiquidAssets/BankAccount.ts","types/LiquidAssets/LiquidAssets.ts","types/Allocation/LedgerAllocationMap.ts","types/Accounting.ts","types/Allocation/LedgerAllocation.ts","types/AllocationFilter.ts","types/Environment.ts","components/Workers/worker.ts","components/Charts/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","objectAssign","require","compare","a","b","x","length","y","len","Math","min","isBuffer","global","Buffer","_isBuffer","util","hasOwn","pSlice","Array","slice","functionsHaveNames","pToString","obj","toString","isView","arrbuf","ArrayBuffer","DataView","buffer","assert","ok","regex","getName","func","isFunction","match","truncate","inspect","something","rawname","fail","actual","expected","message","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","indexOf","push","actualVisitedObjects","undefined","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","sort","objEquiv","expectedException","test","e","Error","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","this","generatedMessage","self","getMessage","captureStackTrace","err","stack","out","fn_name","idx","next_line","substring","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","keys","globalScope","ONE","MAX_DIGITS","Decimal","precision","rounding","toExpNeg","toExpPos","LN10","external","decimalError","invalidArgument","exponentOutOfRange","mathfloor","floor","mathpow","pow","isDecimal","BASE","MAX_SAFE_INTEGER","MAX_E","P","add","carry","k","xd","yd","Ctor","constructor","pr","round","ceil","reverse","unshift","pop","checkInt32","max","digitsToString","ws","indexOfLastWord","str","w","getZeroString","absoluteValue","abs","comparedTo","cmp","j","xdL","ydL","decimalPlaces","dp","dividedBy","div","divide","dividedToIntegerBy","idiv","equals","eq","exponent","getBase10Exponent","greaterThan","gt","greaterThanOrEqualTo","gte","isInteger","isint","isNegative","isneg","isPositive","ispos","isZero","lessThan","lt","lessThanOrEqualTo","lte","logarithm","log","base","wpr","ln","minus","sub","subtract","modulo","mod","q","times","naturalExponential","exp","naturalLogarithm","negated","neg","plus","sd","z","squareRoot","sqrt","toExponential","mul","rL","shift","toDecimalPlaces","todp","rm","toFixed","toInteger","toint","toNumber","toPower","sign","yIsInt","yn","toPrecision","toSignificantDigits","tosd","valueOf","val","toJSON","multiplyInteger","temp","aL","bL","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","denominator","sum","getLn10","zs","c0","numerator","x2","charAt","parseDecimal","replace","search","charCodeAt","rd","doRound","xdi","xe","xLTy","isExp","arr","config","v","ps","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","set","define","_typeof","iterator","_arguments","arguments","dateFormat","token","timezone","timezoneClip","date","mask","utc","gmt","kindOf","Date","isNaN","maskSlice","String","masks","_","_d","D","_m","_H","_M","_s","_L","_o","getTimezoneOffset","_W","getWeek","flags","dd","pad","ddd","i18n","dayNames","DDD","getDayName","dayName","short","dddd","DDDD","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","H","HH","M","MM","ss","L","timeNames","tt","T","TT","Z","S","W","WW","N","getDayOfWeek","default","shortDate","paddedShortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","_ref","_ref$short","_short","today","yesterday","setDate","tomorrow","targetThursday","getFullYear","getMonth","getDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","dow","isArray","toLowerCase","g","Function","window","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","assign","test1","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","shouldUseNative","target","from","symbols","to","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","args","Number","JSON","stringify","isNull","isObject","deprecate","fn","msg","process","noDeprecation","apply","warned","throwDeprecation","traceDeprecation","console","trace","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","arrayToHash","formatError","RegExp","output","braces","toUTCString","formatProperty","formatArray","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","line","substr","ar","arg","re","objectToString","debuglog","NODE_DEBUG","toUpperCase","pid","isNullOrUndefined","isSymbol","months","timestamp","time","getMinutes","getSeconds","prop","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","then","nextTick","rej","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","mark","__proto__","awrap","async","iter","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","_arrayLikeToArray","arr2","_unsupportedIterableToArray","minLen","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","_slicedToArray","_arr","_n","_i","_defineProperty","_setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent","Class","instance","_toConsumableArray","proxyMarker","createEndpoint","releaseProxy","throwMarker","transferHandlers","Map","canHandle","serialize","MessageChannel","port1","port2","expose","deserialize","port","start","createProxy","serialized","ep","addEventListener","callback","ev","data","returnValue","path","id","argumentList","fromWireValue","parent","rawValue","transfer","catch","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","proxy","_target","requestResponseMessage","_thisArg","rawArgumentList","last","processArguments","processed","transferCache","WeakMap","transfers","handler","random","_classCallCheck","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_applyDecoratedDescriptor","decorators","initializer","decorator","ownKeys","enumerableOnly","filter","sym","_objectSpread2","_inherits","subClass","superClass","_getPrototypeOf","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","LEDGER_ACCOUNT","BALANCE_ACCOUNT","REVENUE_CATEGORY","PROFITLOSS_ACCOUNT","EXPENSE_CATEGORY","BANK_ACCOUNT","UNMAPPED_ACCOUNT","ACCRUED_EXPENSE","ACCRUED_REVENUE","VAT_TO_BE_CLAIMED","VAT_TO_BE_PAID","PAYMENT_DIFFERENCES","VAT_PRIVATE_USE","CreditDebit","LOCALE","packageJson","defaultAmountData","amount","currency","creditDebit","Credit","Amount","amounts","other","newAmount","Debit","reversed","formatOptions","minimumFractionDigits","maximumFractionDigits","isDebit","Intl","NumberFormat","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","sortedArray","getKey","v1","v2","s1","s2","removeDiacritics","normalize","LedgerAccount","ledgerAccount","code","text","description","includes","Referentiecode","ReferentieOmslagcode","Nivo","Omschrijving","OmschrijvingKort","DC","Sortering","Parents","LedgerScheme","getAccount","parents","level","isBalanceAccount","isRevenue","isExpense","account","sortKey","Referentienummer","Cache","clear","propertyKey","originalMethod","mainKey","getClearCacheMethod","memoize","getCachedResultMethod","has","useLocalJSON","fetchData","rgsData","connectToParents","storeLedgerScheme","json","fetch","URL","ledgerAccounts","side","accounts","searchText","includeParents","Set","matchText","ledgerAccountMap","orphans","a1","a2","find","warn","acc","isAllocatable","allocatableAccounts","isBankAccount","RGS_API_BASE_URL","DefaultBankAccountCode","EntryLeg","amountData","ledgerAccountCode","tag","ISO_DATESTRING_LENGTH","DateString","dateString","ISODateString","RangeError","day","month","year","toLocaleDateString","toISOString","Period","string","currentYear","range","periods","period","VATRate","percentage","shortDescription","percentageString","NO_VAT","VAT_0","VAT_HIGH","VAT_LOW","VATHistory","VATRates","isoDateString","fixedRates","rate","VATLine","vatRate","bruto","touched","_touched","vat","netto","setBruto","touch","newBruto","value2String","brutoNetto","newVAT","newNetto","reverseBrutoVATNetto","vatLines","lines","rates","vatLine","brutoVATNetto","toPositive","toNegative","_vat","_netto","total","addVATLines","remaining","fromAmountCurrency","auto","getTotalRemaining","hasVAT","noVATLine","getSortedLines","untouch","l1","l2","VATDeclarationTag","JournalEntry","legs","leg","vatSpecificationData","entryLegsData","splice","allocatedLeg","oppositeLeg","checkIntegrity","getVAT","oppositeAccount","declaration","getJournalData","declaredVAT","rawVAT","declared","difference","totalHigh","High","totalLow","Low","totalPrivateUse","PrivateUse","totalPaid","Paid","Declared","fromDate","DataMapping","items","hasItem","addItem","condition","entries","getValue","Journal","getItem","modify","entryData","distinctValues","periodFilter","journalEntryData","periodInRange","filterLeg","journalEntry","addItemIfNotExists","delItem","getItems","AccountBalance","AccountStatement","closingBalanceData","openingBalanceData","StatementEntry","relatedParties","trim","Accounting","liquidAssets","getAccountStatement","accountStatementRef","valueDate","bookDate","remittanceInformation","StatementEntryMap","statementEntry","isSimilar","statementEntryData","dateInRange","totals","statement","statements","credit","debit","IBAN","EVERY_FOUR_CHARS","AccountStatementMap","accountStatementData","BankAccount","newStatement","newEntries","statementId","accountStatementMapData","entryId","statementEntryMapData","newEntry","LiquidAssets","bankAccountData","accountStatements","statementEntries","filterOnPeriod","balances","balance","begin","end","beginBalance","endBalance","bankAccounts","bankAccount","getAccountStatementMap","getStatementEntryMap","getStatementEntry","statementData","bankAccountId","statementEntriesData","accountStatement","LedgerAllocationMap","LedgerAllocation","allocations","allocation","allocationData","mapped","unmapped","isUnmapped","fromEntries","parentData","parentRef","children","childrenRefs","some","statementEntryMap","hasParent","contains","fromStatementEntry","fromAllocation","accounting","journal","child","addChild","removeChild","remove","getAllocation","getSimilarEntries","getUnallocatedEntries","State","metaData","_CurrentState","accountingMetaData","statementsData","addBankImportStatement","addStatementEntries","ledgerAllocationsData","sorted","hasJournalEntry","getJournalEntry","deleteJournalEntry","ledgerAccountData","getBankAccount","updateStatementEntries","allocationsData","accountCode","setVAT","journalData","liquidAssetsData","allocationFilter","getSplitId","statementEntryRef","journalEntryRef","_parent","element","index","arrayRemoveElement","unsplitAllocation","hasChildren","splitAllocation","getAccrualsAccount","AllocationFilter","periodId","Environment","ledgerScheme","Data","getBankAccountChartData","environment","_bankAccount","chartData","closingBalance","label","getBankAccountData","getAllocationRows","_allocations","viewPort","_allocationFilter","_step","showRows","_iterator","_allocation","matches","__webpack_exports__"],"mappings":"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","file":"a13d934933c270731256.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Boekhoud-Source/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","module.exports = require(\"regenerator-runtime\");\n","/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Decimal;\r\n\r\n    // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self\r\n        ? self : Function('return this')();\r\n    }\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","\"use strict\";function _typeof(obj){\"@babel/helpers - typeof\";if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj}}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj}}return _typeof(obj)}(function(global){var _arguments=arguments;var dateFormat=function(){var token=/d{1,4}|D{3,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|W{1,2}|[LlopSZN]|\"[^\"]*\"|'[^']*'/g;var timezone=/\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;var timezoneClip=/[^-+\\dA-Z]/g;return function(date,mask,utc,gmt){if(_arguments.length===1&&kindOf(date)===\"string\"&&!/\\d/.test(date)){mask=date;date=undefined}date=date||date===0?date:new Date;if(!(date instanceof Date)){date=new Date(date)}if(isNaN(date)){throw TypeError(\"Invalid date\")}mask=String(dateFormat.masks[mask]||mask||dateFormat.masks[\"default\"]);var maskSlice=mask.slice(0,4);if(maskSlice===\"UTC:\"||maskSlice===\"GMT:\"){mask=mask.slice(4);utc=true;if(maskSlice===\"GMT:\"){gmt=true}}var _=function _(){return utc?\"getUTC\":\"get\"};var _d=function d(){return date[_()+\"Date\"]()};var D=function D(){return date[_()+\"Day\"]()};var _m=function m(){return date[_()+\"Month\"]()};var y=function y(){return date[_()+\"FullYear\"]()};var _H=function H(){return date[_()+\"Hours\"]()};var _M=function M(){return date[_()+\"Minutes\"]()};var _s=function s(){return date[_()+\"Seconds\"]()};var _L=function L(){return date[_()+\"Milliseconds\"]()};var _o=function o(){return utc?0:date.getTimezoneOffset()};var _W=function W(){return getWeek(date)};var _N=function N(){return getDayOfWeek(date)};var flags={d:function d(){return _d()},dd:function dd(){return pad(_d())},ddd:function ddd(){return dateFormat.i18n.dayNames[D()]},DDD:function DDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:dateFormat.i18n.dayNames[D()],short:true})},dddd:function dddd(){return dateFormat.i18n.dayNames[D()+7]},DDDD:function DDDD(){return getDayName({y:y(),m:_m(),d:_d(),_:_(),dayName:dateFormat.i18n.dayNames[D()+7]})},m:function m(){return _m()+1},mm:function mm(){return pad(_m()+1)},mmm:function mmm(){return dateFormat.i18n.monthNames[_m()]},mmmm:function mmmm(){return dateFormat.i18n.monthNames[_m()+12]},yy:function yy(){return String(y()).slice(2)},yyyy:function yyyy(){return pad(y(),4)},h:function h(){return _H()%12||12},hh:function hh(){return pad(_H()%12||12)},H:function H(){return _H()},HH:function HH(){return pad(_H())},M:function M(){return _M()},MM:function MM(){return pad(_M())},s:function s(){return _s()},ss:function ss(){return pad(_s())},l:function l(){return pad(_L(),3)},L:function L(){return pad(Math.floor(_L()/10))},t:function t(){return _H()<12?dateFormat.i18n.timeNames[0]:dateFormat.i18n.timeNames[1]},tt:function tt(){return _H()<12?dateFormat.i18n.timeNames[2]:dateFormat.i18n.timeNames[3]},T:function T(){return _H()<12?dateFormat.i18n.timeNames[4]:dateFormat.i18n.timeNames[5]},TT:function TT(){return _H()<12?dateFormat.i18n.timeNames[6]:dateFormat.i18n.timeNames[7]},Z:function Z(){return gmt?\"GMT\":utc?\"UTC\":(String(date).match(timezone)||[\"\"]).pop().replace(timezoneClip,\"\").replace(/GMT\\+0000/g,\"UTC\")},o:function o(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60)*100+Math.abs(_o())%60,4)},p:function p(){return(_o()>0?\"-\":\"+\")+pad(Math.floor(Math.abs(_o())/60),2)+\":\"+pad(Math.floor(Math.abs(_o())%60),2)},S:function S(){return[\"th\",\"st\",\"nd\",\"rd\"][_d()%10>3?0:(_d()%100-_d()%10!=10)*_d()%10]},W:function W(){return _W()},WW:function WW(){return pad(_W())},N:function N(){return _N()}};return mask.replace(token,function(match){if(match in flags){return flags[match]()}return match.slice(1,match.length-1)})}}();dateFormat.masks={default:\"ddd mmm dd yyyy HH:MM:ss\",shortDate:\"m/d/yy\",paddedShortDate:\"mm/dd/yyyy\",mediumDate:\"mmm d, yyyy\",longDate:\"mmmm d, yyyy\",fullDate:\"dddd, mmmm d, yyyy\",shortTime:\"h:MM TT\",mediumTime:\"h:MM:ss TT\",longTime:\"h:MM:ss TT Z\",isoDate:\"yyyy-mm-dd\",isoTime:\"HH:MM:ss\",isoDateTime:\"yyyy-mm-dd'T'HH:MM:sso\",isoUtcDateTime:\"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",expiresHeaderFormat:\"ddd, dd mmm yyyy HH:MM:ss Z\"};dateFormat.i18n={dayNames:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],monthNames:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],timeNames:[\"a\",\"p\",\"am\",\"pm\",\"A\",\"P\",\"AM\",\"PM\"]};var pad=function pad(val,len){val=String(val);len=len||2;while(val.length<len){val=\"0\"+val}return val};var getDayName=function getDayName(_ref){var y=_ref.y,m=_ref.m,d=_ref.d,_=_ref._,dayName=_ref.dayName,_ref$short=_ref[\"short\"],_short=_ref$short===void 0?false:_ref$short;var today=new Date;var yesterday=new Date;yesterday.setDate(yesterday[_+\"Date\"]()-1);var tomorrow=new Date;tomorrow.setDate(tomorrow[_+\"Date\"]()+1);var today_d=function today_d(){return today[_+\"Date\"]()};var today_m=function today_m(){return today[_+\"Month\"]()};var today_y=function today_y(){return today[_+\"FullYear\"]()};var yesterday_d=function yesterday_d(){return yesterday[_+\"Date\"]()};var yesterday_m=function yesterday_m(){return yesterday[_+\"Month\"]()};var yesterday_y=function yesterday_y(){return yesterday[_+\"FullYear\"]()};var tomorrow_d=function tomorrow_d(){return tomorrow[_+\"Date\"]()};var tomorrow_m=function tomorrow_m(){return tomorrow[_+\"Month\"]()};var tomorrow_y=function tomorrow_y(){return tomorrow[_+\"FullYear\"]()};if(today_y()===y&&today_m()===m&&today_d()===d){return _short?\"Tdy\":\"Today\"}else if(yesterday_y()===y&&yesterday_m()===m&&yesterday_d()===d){return _short?\"Ysd\":\"Yesterday\"}else if(tomorrow_y()===y&&tomorrow_m()===m&&tomorrow_d()===d){return _short?\"Tmw\":\"Tomorrow\"}return dayName};var getWeek=function getWeek(date){var targetThursday=new Date(date.getFullYear(),date.getMonth(),date.getDate());targetThursday.setDate(targetThursday.getDate()-(targetThursday.getDay()+6)%7+3);var firstThursday=new Date(targetThursday.getFullYear(),0,4);firstThursday.setDate(firstThursday.getDate()-(firstThursday.getDay()+6)%7+3);var ds=targetThursday.getTimezoneOffset()-firstThursday.getTimezoneOffset();targetThursday.setHours(targetThursday.getHours()-ds);var weekDiff=(targetThursday-firstThursday)/(864e5*7);return 1+Math.floor(weekDiff)};var getDayOfWeek=function getDayOfWeek(date){var dow=date.getDay();if(dow===0){dow=7}return dow};var kindOf=function kindOf(val){if(val===null){return\"null\"}if(val===undefined){return\"undefined\"}if(_typeof(val)!==\"object\"){return _typeof(val)}if(Array.isArray(val)){return\"array\"}return{}.toString.call(val).slice(8,-1).toLowerCase()};if(typeof define===\"function\"&&define.amd){define(function(){return dateFormat})}else if((typeof exports===\"undefined\"?\"undefined\":_typeof(exports))===\"object\"){module.exports=dateFormat}else{global.dateFormat=dateFormat}})(void 0);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import dateFormat from \"dateformat\"\nimport packageJson from \"../package.json\"\nimport preval from \"preval.macro\"\n\nconst dateTimeStamp = preval`module.exports = new Date()`\n\nexport class LEDGER_ACCOUNT {\n    static readonly BALANCE_ACCOUNT = \"B\"\n    static readonly PROFITLOSS_ACCOUNT = \"W\"\n    static readonly REVENUE_CATEGORY = LEDGER_ACCOUNT.PROFITLOSS_ACCOUNT + \"+\"\n    static readonly EXPENSE_CATEGORY = LEDGER_ACCOUNT.PROFITLOSS_ACCOUNT + \"-\"\n    static readonly BANK_ACCOUNT = \"BLimBan\"\n    static readonly UNMAPPED_ACCOUNT = \"BXxx\"\n    static readonly ACCRUED_EXPENSE = \"BSchOpaNtb\"  // Expenses left to be paid\n    static readonly ACCRUED_REVENUE = \"BVorOvaNov\"  // Revenues left to be received\n    static readonly VAT_TO_BE_CLAIMED = \"BVorVbkTvo\"\n    static readonly VAT_TO_BE_PAID = \"BSchBepBtw\"\n    static readonly PAYMENT_DIFFERENCES = \"WBedAdlBet\"\n    static readonly VAT_PRIVATE_USE = \"WBedAutBop\"\n}\n\nexport const LOCALE = 'nl-NL'\nexport const DEFAULT_CURRENCY = 'EUR'\n\nexport const APP = {\n    TITLE: \"Boekhoud Source\",\n    KEY: \"BkhdSrc\",\n    VERSION: packageJson.version,\n    BUILD: dateFormat(dateTimeStamp, \"yyyy-mm-dd HH:MM\"),\n    STATE: \"Beta\",\n    SOURCE: \"https://github.com/Vegter/Boekhoud-Source\"\n}\n\nexport const RGS_API_BASE_URL = \"http://localhost:8000\"\n\nconst LOCAL_BASE_URL = `/Boekhoud-Source`\n\nexport function localPath(path: string) {\n    return `${LOCAL_BASE_URL}${path}`\n}\n","import assert from \"assert\"\nimport Decimal from \"decimal.js-light\"\nimport { AmountData } from \"../model\"\nimport { DEFAULT_CURRENCY, LOCALE } from \"../config\"\n\nexport enum CreditDebit {\n    Debit = -1,\n    Credit = 1\n}\n\nconst defaultAmountData = {\n    amount: 0,\n    currency: \"\",\n    creditDebit: CreditDebit.Credit\n}\n\ninterface FormatOptions {\n    reversed: boolean,\n    precision: number\n}\n\n/**\n * An amount specifies an amount of money, either debit or credit, in a specific currency\n *\n * Amounts are used in JournalEntries to record business transactions\n * Every business transaction is recorded in at least two places (double entry accounting)\n * The total of the debit and credit amounts in a JournalEntry is 0\n *\n * Amounts are treated as Decimals to prevent floating point rounding issues\n * Externally, amounts are represented as number\n */\nexport class Amount {\n    readonly data: AmountData\n\n    constructor(data?: AmountData) {\n        data = data ?? {...defaultAmountData}\n        assert(data.amount >= 0)\n        this.data = data\n    }\n\n    /**\n     * Creates an Amount from the given amount and currency\n     *\n     * The amount defaults to 0 and the currency to \"\"\n     */\n    static fromAmountCurrency(amount: number = 0, currency: string = \"\"): Amount {\n        return new Amount({\n            amount: Math.abs(amount),\n            currency,\n            creditDebit: amount < 0 ? CreditDebit.Debit : CreditDebit.Credit\n        })\n    }\n\n    /**\n     * Returns the plain amount\n     */\n    get amount(): number { return this.data.amount }\n\n    /**\n     * Returns the currency in which the amount is expressed\n     */\n    get currency(): string { return this.data.currency }\n\n    /**\n     * Returns the \"side\" of the amount; credit or debit\n     */\n    get creditDebit(): CreditDebit { return this.data.creditDebit }\n\n    /**\n     * Tells whether the amount is a debit amount\n     */\n    get isDebit() { return this.data.creditDebit === CreditDebit.Debit }\n\n    /**\n     * Tells whether the amount is a credit amount\n     */\n    get isCredit() { return ! this.isDebit }\n\n    /**\n     * Add a number of Amounts to the current amount and returns the result as a new Amount\n     *\n     * The original amount is not changed\n     */\n    add(amount: Amount, ...amounts: Amount[]): Amount {\n        const [value, currency] = [amount].concat(amounts)\n            .filter(amount => !amount.isNull())\n            .reduce(([value, currency], other) => {\n                assert(currency === defaultAmountData.currency || other.currency === currency)\n                value = value.add(other.value)\n                currency = other.currency\n                return [value, currency]\n        }, [new Decimal(this.value), this.currency] as [Decimal, string])\n        // Convert to Amount\n        const newAmount = value.toNumber()\n        return new Amount({\n            currency,\n            amount: Math.abs(newAmount),\n            creditDebit: newAmount < 0 ? CreditDebit.Debit : CreditDebit.Credit\n        })\n    }\n\n    /**\n     * Return a new reversed Amount for this amount\n     *\n     * The original amount is not changed\n     */\n    reversed(): Amount {\n        return new Amount({\n            ...this.data,\n            creditDebit: this.creditDebit === CreditDebit.Credit ? CreditDebit.Debit : CreditDebit.Credit\n        })\n    }\n\n    /**\n     * returns the value of the amount as a number\n     * A positive number for a credit amount, a negative number for a debit amount\n     */\n    get value(): number {\n        return this.amount * this.creditDebit\n    }\n\n    /**\n     * Tells whether the Amount is not set; ie just created with all default data\n     */\n    isNull(): boolean {\n        return this.amount === defaultAmountData.amount && this.currency === defaultAmountData.currency\n    }\n\n    /**\n     * Tells whether the amount is a zero amount\n     *\n     * A small margin is used to compensate for any rounding errors\n     */\n    isZero(): boolean {\n        const tolerance = 0.001\n        return this.amount <= tolerance\n    }\n\n    /**\n     * Returns the amount as a formatted string\n     *\n     * Example: {10, \"EUR\", debit} => € -10.00\n     */\n    format(options: Partial<FormatOptions> = {}): string {\n        const { reversed, precision } = options\n        let value: number\n        if (this.isZero()) {\n            value = 0\n        } else {\n            value = this.value\n            if (reversed) {\n                value = -value\n            }\n        }\n\n        const formatOptions = {\n            minimumFractionDigits: precision,\n            maximumFractionDigits: precision\n        }\n\n        return Amount.formatValue(value, formatOptions, this.currency)\n    }\n\n    /**\n     * Format a numeric value using the default Locale in the given currency\n     */\n    static formatValue(value: number, options: {}, currency?: string) {\n        let formatter = new Intl.NumberFormat(LOCALE, {\n            style: 'currency',\n            currency: currency || DEFAULT_CURRENCY,\n            ...options\n        });\n        return formatter.format(value); /* $2,500.00 */\n    }\n\n    /**\n     * Returns a string presentation of the Amount\n     */\n    toString(): string {\n        return this.format()\n    }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import assert from \"assert\"\n\n/**\n * Highlight inputValue in text\n * If the given value is found in the text, the value will be changed like:\n * <span class=className>text</span>\n */\nexport function highlight(inputValue: string, text: string, className: string) {\n    if (inputValue && inputValue.length >= 3) {\n        // Don't trigger on small strings\n        const regex = new RegExp(inputValue, \"gi\")\n        let founds = []\n        text = removeDiacritics(text)\n        let found = regex.exec(text)\n        while (found !== null) {\n            founds.push(found)\n            found = regex.exec(text)\n        }\n        for (let i of founds.map(f => f.index).reverse()) {\n            const replacement = text.substr(i, inputValue.length)\n            text = text.substr(0, i) +\n                `<span class=\"${className}\">${replacement}</span>` +\n                text.substr(i + replacement.length)\n        }\n    }\n    return text\n}\n\n/**\n * Capitalize a string\n * Example: capitalize(\"any string\") = \"Any string\"\n */\nexport const capitalize = (s: string) =>\n    s.charAt(0).toUpperCase() + s.slice(1).toLowerCase()\n\n/**\n * Sort an array on any attribute\n */\nexport function sortedArray<T>(array: T[], getKey: (item: T) => string) {\n    array.sort((v1, v2) => {\n        const s1 = getKey(v1)\n        const s2 = getKey(v2)\n        return s1 < s2 ? -1 : s1 > s2 ? 1 : 0\n    })\n    return array\n}\n\n/**\n * Remove an element from an array, wrapper around array.splice\n */\nexport function arrayRemoveElement<T>(array: T[], element: T): T[] {\n    const index = array.indexOf(element)\n    if (index >= 0) {\n        array.splice(index, 1)\n    }\n    return array\n}\n\n/**\n * Returns a range of numbers, [from, to>\n * Example: range(5, 7) => [5, 6]\n */\nexport function range(from: number, to: number | null = null): number[] {\n    if (to === null) {\n        to = from\n        from = 0\n    }\n    assert(to >= from)\n    return Array.from(Array(to - from).keys()).map(v => from + v)\n}\n\n/**\n * Returns a string without diacritics\n * Example: removeDiacritics(\"accepté\") => accepte\n */\nexport function removeDiacritics(s: string) {\n    return s\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '');\n}\n\nexport function allOrSome<T>(all: T[], some: T[]) {\n    // If some has any elements return some else return all\n    return some.length > 0 ? some : all\n}\n\nexport function noneOrSome<T>(all: T[], some: T[]) {\n    // If some is equal to all then return [] else just return some\n    return some.sort().join(\"\") === all.sort().join(\"\") ? [] : some\n}\n","import { LedgerScheme } from \"./LedgerScheme\"\nimport { LedgerAccountData } from \"../../model\"\nimport { LEDGER_ACCOUNT } from \"../../config\"\nimport { removeDiacritics } from \"../../services/utils\"\n\n/**\n * LedgerAccount\n *\n * A ledger account is used to record business transactions.\n */\nexport class LedgerAccount {\n\n    constructor(readonly data: LedgerAccountData) {}\n\n    /**\n     * A ledgerAccount is uniquely identified by its code\n     */\n    get code(): string { return this.data.Referentiecode }\n\n    /**\n     * A ledgerAccount is uniquely identified by its code\n     */\n    get reverseCode(): string { return this.data.ReferentieOmslagcode || \"\" }\n\n    /**\n     * A ledgerAccount has a level in the ledgerScheme hierarchy\n     */\n    get level(): number { return this.data.Nivo }\n\n    /**\n     * The description of the ledgerAccount\n     */\n    get description(): string { return this.data.Omschrijving }\n\n    /**\n     * A short description of the ledgerAccount\n     */\n    get shortDescription(): string { return this.data.OmschrijvingKort }\n\n    /**\n     * Tells whether the account is a debit (D) or credit (C) account\n     * The highest level accounts (Balance and ProfitLoss) do not have a side\n     */\n    get side(): string | undefined { return this.data.DC?.toUpperCase() }\n\n    /**\n     * A property of the ledgerAccount to sort ledgerAccounts\n     */\n    get sortKey(): string {\n        if (this.data.Sortering) {\n            return this.data.Sortering\n        } else {\n            switch(this.data.Referentiecode) {\n                case LEDGER_ACCOUNT.BALANCE_ACCOUNT: {\n                    return \"0\"\n                }\n                case LEDGER_ACCOUNT.PROFITLOSS_ACCOUNT: {\n                    return \"N\"\n                }\n            }\n        }\n        return this.data.Sortering\n    }\n\n    /**\n     * Tells whether the account is an account to book revenues\n     */\n    get isRevenue(): boolean { return this.data.Referentiecode[0] === 'W' && this.data.DC === \"C\" }\n\n    /**\n     * Tells whether the account is an account to book expenses\n     */\n    get isExpense(): boolean { return this.data.Referentiecode[0] === 'W' && this.data.DC === \"D\" }\n\n    /**\n     * An account is part of a hierarchy.\n     * The hierarchy is returned in a sorted list of ledgerAccounts, up to the highest level\n     */\n    get parents(): LedgerAccount[] {\n        return this.data.Parents.map(data => LedgerScheme.getAccount(data.Referentiecode))\n    }\n\n    /**\n     * Returns the parent LedgerAccount if a parent exists, else undefined\n     */\n    get parent(): LedgerAccount | null {\n        const parents = this.parents\n        return parents.length > 0 ? parents[0] : null\n    }\n\n    /**\n     * Tells whether the account can be used to allocate transactions\n     */\n    get isAllocatable(): boolean { return [4].includes(this.level) || this.code === UNMAPPED_ACCOUNT.code}\n\n    /**\n     * Tells whether the account is a child of the given ledgerAccount\n     */\n    isChildOf(ledgerAccount: LedgerAccount): boolean {\n        return this.code.indexOf(ledgerAccount.code) === 0\n    }\n\n    /**\n     * Tells whether the account is an account that can be associated with a bankAccount\n     */\n    isBankAccount(): boolean {\n        return this.code.indexOf(LEDGER_ACCOUNT.BANK_ACCOUNT) === 0\n    }\n\n    /**\n     * Tells whether the account is balance account\n     * If not, the account is a expense- and revenues account\n     */\n    isBalanceAccount(): boolean {\n        return this.code.indexOf(LEDGER_ACCOUNT.BALANCE_ACCOUNT) === 0\n    }\n\n    get category(): string {\n        if (this.isBalanceAccount()) {\n             return LEDGER_ACCOUNT.BALANCE_ACCOUNT\n        } else if (this.isRevenue) {\n             return LEDGER_ACCOUNT.REVENUE_CATEGORY\n        } else if (this.isExpense) {\n             return LEDGER_ACCOUNT.EXPENSE_CATEGORY\n        } else {\n            return \"\"\n        }\n    }\n\n    /**\n     * Tells whether the account is an account that is yet unmapped\n     * Unmapped means that the account is not part of the regular ledgerScheme accounts\n     * Transactions that are booked on this account need still to be allocated\n     */\n    isUnmapped(): boolean {\n        return this.code === UNMAPPED_ACCOUNT.code\n    }\n\n    /**\n     * Tells whether the account is equal to an another account\n     */\n    public equals(other: LedgerAccount): boolean {\n        return other.code === this.code\n    }\n\n    /**\n     * Returns a method that can be used to sort a list of ledgerAccounts\n     */\n    static get sortKey() {\n        return (account: LedgerAccount) => account.sortKey\n    }\n\n    /**\n     * Tells whether the text matches the description of the ledgerAccount\n     * Any diacritics in the description are ignored\n     */\n    matchDescription(text: string) {\n        return removeDiacritics(this.description).toLowerCase().includes(text)\n    }\n\n    /**\n     * Tells whether any value of the ledgerAccount matched the given text\n     * Any diacritics in the ledgerAccount values are ignored\n     */\n    matchText(text: string) {\n        return removeDiacritics(Object.values(this.data)\n            .map(data => String(data))\n            .map(s => s.toLowerCase())\n            .join(\"\")\n            ).includes(text.toLowerCase())\n    }\n}\n\n/**\n * A special ledgerAccount that can be used to book transactions that still need to be\n * allocated to a ledgerScheme account\n */\nexport const UNMAPPED_ACCOUNT = new LedgerAccount({\n    Referentiecode: LEDGER_ACCOUNT.UNMAPPED_ACCOUNT,\n    ReferentieOmslagcode: null,\n    Sortering: \"0\",\n    Referentienummer: \"0\",\n    OmschrijvingKort: \"Nog te boeken\",\n    Omschrijving: \"Nog te boeken\",\n    DC: null,\n    Nivo: 2,\n    Parents: []\n})\n","/**\n * Caching decorators\n */\n\n/**\n * Hold any method or accessor result in a WeakMap\n *\n * The object references in the keys are held weakly,\n * meaning that they are a target of garbage collection (GC) if there is no other reference to the object anymore.\n */\nconst Cache: Record<string, Record<string, WeakMap<Object, any>>> = {}\n\n/**\n * Clears the cache for a specific class\n *\n * Method decorator\n */\nexport function clear() {\n    return function (target: object, propertyKey: string, descriptor: PropertyDescriptor) {\n        if (descriptor.value) {\n            descriptor.value = getClearCacheMethod(target, descriptor.value)\n        } else {\n            throw Error(\"Only put clear() decorator on method\")\n        }\n    }\n}\n\n/**\n * Memoize a method or accessor result\n *\n * Method or accessor decorator\n */\nexport function memoize() {\n    return function (target: object, propertyKey: string, descriptor: PropertyDescriptor) {\n        if (descriptor.value) {\n            descriptor.value = getCachedResultMethod(target, propertyKey, descriptor.value)\n        } else if (descriptor.get) {\n            descriptor.get = getCachedResultMethod(target, propertyKey, descriptor.get)\n        } else {\n            throw Error(\"Only put memoize() decorator on method or getter\")\n        }\n    }\n}\n\n/**\n * Returns a unique key to identify cached results\n */\nfunction mainKey(target: object) {\n    // target: Either the constructor function of the class for a static member\n    //         or the prototype of the class for an instance member\n\n    // @ts-ignore\n    if (target.name) {\n        // @ts-ignore\n        return `__CLASS__${target.name}`\n    } else {\n        return `__INSTANCE__${target.constructor.name}`\n    }\n}\n\n/**\n * Clears the cache for the specific class or instance\n */\nfunction getClearCacheMethod(target: object, originalMethod: (...args: any[]) => any) {\n    return function(...args: any[]) {\n        delete Cache[mainKey(target)]\n        // @ts-ignore\n        return originalMethod.apply(this, args)\n    }\n}\n\n/**\n * Returns a method that returns a cached result if available\n * If no cached result is available then the result of the original method is returned and saved in the cache\n */\nfunction getCachedResultMethod(target: object, propertyKey: string, originalMethod: (...args: any[]) => any) {\n    const key = mainKey(target)\n\n    return function(...args: any[]) {\n        // @ts-ignore\n        const instance = this\n\n        if (args.length > 0) {\n            throw Error(\"Only memoize methods without arguments\")\n        }\n        if (Cache[key] && Cache[key][propertyKey] && Cache[key][propertyKey].has(instance)) {\n            // Return cached result\n        } else {\n            // Execute the original method, save the result in the cache\n            Cache[key] = Cache[key] ?? {}\n            Cache[key][propertyKey] = Cache[key][propertyKey] ?? new WeakMap()\n            Cache[key][propertyKey].set(instance, originalMethod.apply(instance, args))\n        }\n        // Return the cached result\n        return Cache[key][propertyKey].get(instance)\n    }\n}\n","import assert from \"assert\"\n\nimport { LEDGER_ACCOUNT, RGS_API_BASE_URL } from \"../../config\"\nimport json from \"../../rgsBasis.json\"\n\nimport { LedgerAccount, UNMAPPED_ACCOUNT } from \"./LedgerAccount\"\nimport { LedgerAccountData } from \"../../model\"\nimport { Amount, CreditDebit } from \"../Amount\"\nimport { clear, memoize } from \"../../services/memoize\"\nimport { sortedArray } from \"../../services/utils\"\n\nexport type LedgerSchemeData = Record<string, LedgerAccount>\n\n/**\n * LedgerScheme\n *\n * the Reference Classification System of Financial Information (RCSFI) or in Dutch “Referentie GrootboekSchema” (RGS)\n * It contains all the ledgers which are required to report to the Dutch government\n * and most of the ledgers used for internal reporting\n *\n * The data is either received from an API or provided locally\n */\nexport abstract class LedgerScheme {\n\n    /**\n     * The address of the API to receive the RGS scheme\n     */\n    private static readonly URL = RGS_API_BASE_URL + \"/rgs?Basis\"\n\n    /**\n     * The actual LedgerScheme, a dictionary that maps a LedgerAccount id to a LedgerAccount\n     */\n    private static ledgerAccountMap: LedgerSchemeData = {}\n\n    /**\n     * Any orphans that have been identified while loading the data.\n     * Orphans are ledger accounts that have no parent ledger account in the ledger account scheme\n     */\n    public static orphans: LedgerAccount[] = []\n\n    /**\n     * The default account to book any bank statements\n     */\n    public static DefaultBankAccountCode = LEDGER_ACCOUNT.BANK_ACCOUNT\n\n    /**\n     * Loads the RGS data, either by using an API or by using locally stored data (useLocalJSON = true)\n     *\n     * Default behaviour is to use locally stored data\n     */\n    public static async load(useLocalJSON: boolean = true): Promise<void> {\n        // import summaryMap\n        let rgsData = await this.fetchData(useLocalJSON)\n\n        // Add unmapped account(s) as first accounts in the list\n        rgsData = [UNMAPPED_ACCOUNT.data].concat(rgsData)\n\n        // Connect each account to its parent\n        this.connectToParents(rgsData)\n\n        // Store ledger scheme\n        this.storeLedgerScheme(rgsData)\n    }\n\n    /**\n     * Returns the data of the ledgerScheme, being the ledgerAccountMap\n     */\n    public static get Data(): typeof LedgerScheme.ledgerAccountMap {\n        return this.ledgerAccountMap\n    }\n\n    /**\n     * Restore data from a saved ledgerAccountMap\n     *\n     * This method is \"Worker-safe\". The ledgerAccountMap is entirely restored from its data\n     */\n    public static set Data(data: typeof LedgerScheme.ledgerAccountMap) {\n        this.storeLedgerScheme(Object.values(data).map((v: LedgerAccount) => v.data))\n    }\n\n    /**\n     * Fetch the RGS data from an API or a local JSON file\n     */\n    private static async fetchData(useLocalJSON: boolean): Promise<LedgerAccountData[]> {\n        if (useLocalJSON && json) {\n            return json as LedgerAccountData[]\n        } else {\n            const data = await fetch(this.URL)\n            return await data.json() as LedgerAccountData[]\n        }\n    }\n\n    @memoize()\n    /**\n     * Returns an array with all account levels present in the LedgerScheme\n     */\n    static Levels(): number[] {\n        return Object.values(\n            this.ledgerAccounts.reduce((result, account) => {\n                result[account.level] = account.level\n                return result\n            }, {} as Record<number, number>))\n    }\n\n    @memoize()\n    /**\n     * Returns an array with all account sides (debit or credit) present in the LedgerScheme\n     */\n    static Sides(): string[] {\n        return Object.values(\n            this.ledgerAccounts.reduce((result, account) => {\n                if (account.side) {\n                    result[account.side] = account.side\n                }\n                return result\n            }, {} as Record<string, string>))\n    }\n\n    static getMatchingAccounts(accounts: LedgerAccount[], searchText: string, includeParents: boolean) {\n        const result = new Set<LedgerAccount>()\n        accounts.forEach(account => {\n            if (account.matchText(searchText)) {\n                result.add(account)\n                if (includeParents) {\n                    account.parents.forEach(parent => result.add(parent))\n                }\n            }\n        })\n        return sortedArray(Array.from(result), a => a.sortKey)\n    }\n\n    @clear()\n    /**\n     * Initialize the ledger scheme data from a list of ledgerAccount data\n     */\n    private static storeLedgerScheme(ledgerAccounts: LedgerAccountData[]): void {\n        this.ledgerAccountMap = ledgerAccounts.reduce((result, data) => {\n            const account = new LedgerAccount(data)\n            result[account.code] = account\n            return result\n        }, {} as typeof LedgerScheme.ledgerAccountMap)\n    }\n\n    @memoize()\n    /**\n     * Returns a list of all LedgerAccounts in the LedgerScheme\n     */\n    public static get ledgerAccounts(): LedgerAccount[] {\n        return sortedArray(Object.values(LedgerScheme.ledgerAccountMap), acc => acc.sortKey)\n    }\n\n    @memoize()\n    /**\n     * Returns a list of LedgerAccounts in the LedgerScheme that are valid to allocate expenses and revenues\n     */\n    public static get allocatableAccounts(): LedgerAccount[] {\n        return this.ledgerAccounts.filter(account => account.isAllocatable)\n    }\n\n    @memoize()\n    /**\n     * Returns a list of LedgerAccounts in the LedgerScheme that are valid as LedgerAccount for BankAccount transactions\n     */\n    public static get bankAccounts(): LedgerAccount[] {\n        return this.allocatableAccounts.filter(account => account.isBankAccount())\n    }\n\n    @memoize()\n    /**\n     * Returns a list of LedgerAccounts in the LedgerScheme that are balance accounts\n     *\n     * Not being profitLoss accounts or bank accounts\n     */\n    public static get balanceAccounts(): LedgerAccount[] {\n        return this.allocatableAccounts\n            .filter(account => account.isBalanceAccount())\n            .filter(account => !account.isBankAccount())\n    }\n\n    /**\n     * Returns the LedgerAccount to book transactions that need still to be allocated\n     */\n    public static get unmapped(): LedgerAccount {\n        return this.getAccount(LEDGER_ACCOUNT.UNMAPPED_ACCOUNT)\n    }\n\n    /**\n     * Get the account to register accruals\n     *\n     * Based upon the amount (positive or negative) a revenue or expense accruals account is returned\n     */\n    public static getAccrualsAccount(amount: Amount): LedgerAccount {\n        if (amount.creditDebit === CreditDebit.Credit) {\n            return this.getAccount(LEDGER_ACCOUNT.ACCRUED_REVENUE)\n        } else {\n            return this.getAccount(LEDGER_ACCOUNT.ACCRUED_EXPENSE)\n        }\n    }\n\n    /**\n     * Get the LedgerAccount who's code is equal to the given code\n     */\n    public static getAccount(code: string): LedgerAccount {\n        assert(code in this.ledgerAccountMap)\n        return this.ledgerAccountMap[code]\n    }\n\n    /**\n     * Connect the given LedgerAccounts to their parents\n     *\n     * Any LedgerAccounts without parents are registered as orphans\n     */\n    private static connectToParents(accounts: LedgerAccountData[]): void {\n        this.orphans = []\n\n        // Sort accounts on level, ascending\n        accounts.sort((a1, a2) => a1.Nivo - a2.Nivo)\n\n        // Connect accounts to parents\n        for (let account of accounts) {\n            account.Parents = []\n            const parent = accounts.find(c =>\n                c.Nivo === (account.Nivo - 1) &&\n                account.Referentiecode.indexOf(c.Referentiecode) === 0\n            ) || null\n            if (parent === null) {\n                if (account.Nivo > 1) {\n                    // Level 1 is the lowest level, above this level a parent account is expected\n                    this.orphans.push(new LedgerAccount(account))\n                    console.warn(`Missing parent for ${account.Referentiecode}`)\n                }\n            } else {\n                account.Parents.push(parent)\n            }\n        }\n\n        // Determine full list of parents\n        accounts.forEach(account => {\n            const parent = account.Parents[0]\n            account.Parents = parent ? [parent].concat(parent.Parents) : []\n        })\n    }\n}","import { EntryLegData } from \"../../model\"\nimport { Amount } from \"../Amount\"\nimport { LedgerAccount } from \"../Ledger/LedgerAccount\"\nimport { LedgerScheme } from \"../Ledger/LedgerScheme\"\n\n/**\n * EntryLeg\n * A leg (or side) of a JournalEntry\n */\nexport class EntryLeg {\n    constructor(readonly data: EntryLegData) {}\n\n    get amount(): Amount { return new Amount(this.data.amountData) }\n    get ledgerAccount(): LedgerAccount { return LedgerScheme.getAccount(this.data.ledgerAccountCode) }\n    get ledgerAccountCode(): string { return this.data.ledgerAccountCode }\n    get tag(): string { return this.data.tag || \"\"}\n\n    set ledgerAccount(ledgerAccount: LedgerAccount) {\n        this.data.ledgerAccountCode = ledgerAccount.code\n    }\n\n    /**\n     * Returns the reversed leg (DEBIT <-> CREDIT)\n     */\n    reversed() {\n        return new EntryLeg({\n            ...this.data,\n            amountData: this.amount.reversed().data\n        })\n    }\n}\n","import { LOCALE } from \"../config\"\n\nconst ISO_DATESTRING_LENGTH = \"yyyy-mm-dd\".length\n\n/**\n * Date value\n */\nexport class DateString {\n    data: string\n\n    static ISODateString = (date: Date) => date.toISOString().substr(0, ISO_DATESTRING_LENGTH)\n\n    constructor(dateString?: string) {\n        // Expects an ISO Date, eg \"2015-03-25\" (The International Standard) or an empty string\n        let data: string | null = null\n        if (dateString) {\n            try {\n                if (dateString === DateString.ISODateString(new Date(dateString))) {\n                    data = dateString\n                }\n            } catch {}\n        } else {\n            data = DateString.ISODateString(new Date())\n        }\n\n        if (data === null) {\n            throw new RangeError()\n        }\n        this.data = data\n    }\n\n    /**\n     * Constructs a new DateString from a Date object\n     */\n    static fromDate(date: Date): DateString {\n        return new DateString(this.ISODateString(date))\n    }\n\n    /**\n     * Returns the unique id of the DateString\n     */\n    get id(): string { return this.data }\n\n    /**\n     * Returns the Date representation of this DateString\n     * @constructor\n     */\n    get Date(): Date {\n        return new Date(this.data)\n    }\n\n    /**\n     * Returns the string value of this DateString\n     */\n    get string(): string {\n        return this.data\n    }\n\n    /**\n     * Returns the period of this DateString\n     */\n    get period(): string {\n        return this.year\n    }\n\n    /**\n     * Returns the year part of this DateString\n     */\n    get year(): string {\n        return this.data.substr(0, 4)\n    }\n\n    /**\n     * Returns the mont part of this DateString\n     */\n    get month(): string {\n        return this.data.substr(5, 2)\n    }\n\n    /**\n     * Returns a formatted representation of this DateString\n     */\n    format(options?:  Intl.DateTimeFormatOptions): string {\n        options = options || {\n            day: '2-digit',\n            month: '2-digit',\n            year: '2-digit'\n        }\n        return this.Date.toLocaleDateString(LOCALE, options)\n    }\n\n    /**\n     * Converts this DateString to a string value\n     */\n    toString(): string {\n        return this.format()\n    }\n}","import { DateString } from \"./DateString\"\nimport { range, sortedArray } from \"../services/utils\"\n\n/**\n * A Period\n *\n * Implemented as a string\n */\nexport class Period {\n    constructor(public data: string = \"\") {}\n\n    /**\n     * Convert a date to a period (year of the date)\n     */\n    static fromDate(date: DateString) {\n        return new Period(date.year)\n    }\n\n    /**\n     * Return a formatted presentation of the period\n     */\n    format(): string {\n        return this.string\n    }\n\n    /**\n     * Tells whether this period equals the given period\n     */\n    equals(other: Period): boolean { return this.data === other.data }\n\n    /**\n     * Tells whether this period is less than or equal than the given period\n     */\n    lte(other: Period): boolean { return this.data <= other.data }\n\n    /**\n     * Tells whether this period is greater than or equal than the given period\n     */\n    gte(other: Period): boolean { return this.data >= other.data }\n\n    /**\n     * Returns the unique id of this period\n     */\n    get id(): string { return this.data }\n\n    /**\n     * Returns the period as a string\n     */\n    get string(): string { return this.data }\n\n    /**\n     * Returns the period as a number\n     */\n    get value(): number { return Number(this.data) }\n\n    /**\n     * Returns the period before this period\n     */\n    get before(): Period {\n        return new Period(String(this.value - 1))\n    }\n\n    /**\n     * Returns the period after this period\n     */\n    get after(): Period {\n        return new Period(String(this.value + 1))\n    }\n\n    /**\n     * Converts the period to a string value\n     */\n    toString(): string {\n        return this.format()\n    }\n\n    /**\n     * Given this period, return a list of periods to choose from\n     *\n     * This can be used in a dropdown to choose another period value\n     */\n    getSelectablePeriods(): Period[] {\n        const NPeriodsUpDown = 5\n        const currentYear = new Date().getFullYear()\n        const [from, to] = [\n            Math.min(this.value, currentYear) - NPeriodsUpDown,\n            Math.max(this.value, currentYear) + NPeriodsUpDown]\n        return range(from, to + 1).map(n => new Period(String(n)))\n    }\n\n    /**\n     * returns a sorted array (ascending) of the given array of periods\n     */\n    static sort(periods: Period[]) {\n        return sortedArray(periods, period => period.string)\n    }\n\n    /**\n     * Returns the minimum period in the given array of periods\n     */\n    static min(...periods: Period[]): Period {\n        const min = Math.min(...periods.map(period => period.value))\n        return periods.find(period => period.value === min) || new Period()\n    }\n\n    /**\n     * Returns the maximum period in the given array of periods\n     */\n    static max(...periods: Period[]): Period {\n        const max = Math.max(...periods.map(period => period.value))\n        return periods.find(period => period.value === max) || new Period()\n    }\n}\n","const NO_VAT_ID = \"\"\nconst VAT_0_ID = \"Vrijgesteld\"\n\nexport class VATRate {\n    constructor(public id: string, public percentage: number) {}\n\n    get percentageString(): string {\n        return `${this.percentage * 100}%`\n    }\n\n    get shortDescription() {\n        if (this.id === NO_VAT_ID) {\n            return \"Geen BTW\"\n        } else {\n            return `BTW ${this.id} ${this.percentageString}`\n        }\n    }\n\n    toString() {\n        return this.shortDescription\n    }\n}\n\nexport const NO_VAT = new VATRate(NO_VAT_ID, 0)\nexport const VAT_0 = new VATRate(VAT_0_ID, 0)\n","import { VATRate } from \"./VATRate\"\n\nexport const VAT_HIGH = \"Hoog\"\nexport const VAT_LOW = \"Laag\"\n\nexport const VATHistory: Record<string, VATRate[]> = {\n    \"2019-01-01\": [\n        new VATRate(VAT_HIGH, 0.21),\n        new VATRate(VAT_LOW, 0.09)\n    ],\n    \"2012-10-01\": [\n        new VATRate(VAT_HIGH, 0.21),\n        new VATRate(VAT_LOW, 0.06)\n    ],\n}","import { VATHistory } from \"./VATHistory\"\nimport { NO_VAT, VAT_0, VATRate } from \"./VATRate\"\n\nexport type VATRatesMap = Record<string, VATRate>\n\nexport class VATRates {\n\n    constructor(public date: Date) {}\n\n    get rates(): VATRatesMap {\n        const actual = Object.keys(VATHistory).find(isoDateString => {\n            return this.date >= new Date(isoDateString)\n        })\n\n        const fixedRates = [\n            VAT_0,\n            NO_VAT\n        ]\n\n        const rates = actual ? VATHistory[actual] : []\n        return rates.concat(fixedRates).reduce((result, rate) => {\n            result[rate.id] = rate\n            return result\n        }, {} as VATRatesMap)\n    }\n}\n","import { NO_VAT, VATRate } from \"./VATRate\"\nimport { VATSpecificationData, VATSpecificationEntryData } from \"../../model\"\nimport { VATRates } from \"./VATRates\"\nimport { Amount } from \"../Amount\"\nimport assert from \"assert\"\n\ninterface BrutoNetto {\n    netto: string\n    vat: string\n    bruto: string\n}\n\n/**\n * VAT line\n *\n * A VAT line holds the VAT information of a journal entry\n */\nexport class VATLine {\n    private static _touched = 0             // last modified indictor\n\n    touched: number = VATLine._touched      // last modified indicator for an instance\n\n    bruto: string = \"\"\n    vat: string = \"\"\n    netto: string = \"\"\n\n    constructor(public vatRate: VATRate | null = null, bruto?: number) {\n        if (bruto) {\n            this.setBruto(bruto)\n        }\n    }\n\n    /**\n     * Create a VAT Line from a VAT Specification (saved with the journal entry data\n     */\n    static fromVATSpecificationData (data: VATSpecificationData): VATLine[] {\n        const date = new Date(data.date)\n\n        const vatLines:VATLine[] = []\n        data.lines.forEach(line => {\n            const vatRates = new VATRates(date).rates\n            const vatRate = vatRates[line.id]\n            if (vatRate) {\n                const vatLine = new VATLine(vatRate)\n                const { bruto, vat, netto } = line\n                vatLine.bruto = bruto\n                vatLine.vat = vat\n                vatLine.netto = netto\n                vatLines.push(vatLine)\n            }\n        })\n\n        return vatLines\n    }\n\n    /**\n     * Get the VAT data to store with the journal entry\n     */\n    get data() : VATSpecificationEntryData {\n        const { bruto, vat, netto } = this\n        const id = this.vatRate ? this.vatRate.id : \"\"\n        return { id, bruto, vat, netto }\n    }\n\n    /**\n     * Return a reversed copy of the given bruto-vat-netto calculation\n     */\n    static reverseBrutoVATNetto(brutoVATNetto: {bruto: string, vat: string, netto: string}) {\n        const toPositive = (value: string) => value.replace(\"-\", \"\")\n        const toNegative = (value: string) => +value ? `-${value}` : value\n\n        let { bruto, vat, netto } = brutoVATNetto\n\n        if (+bruto <= 0) {\n            bruto = toPositive(bruto)\n            vat = toPositive(vat)\n            netto = toPositive(netto)\n        } else {\n            bruto = toNegative(bruto)\n            vat = toNegative(vat)\n            netto = toNegative(netto)\n        }\n        return { bruto, vat, netto }\n    }\n\n    /**\n     * Reverse a VAT line, positive amounts become negative and vice versa\n     */\n    get reversed(): VATLine {\n        const reversed = new VATLine()\n        Object.assign(reversed, this)\n\n        const { bruto, vat, netto } = VATLine.reverseBrutoVATNetto({\n            bruto: this.bruto,\n            vat: this.vat,\n            netto: this.netto\n        })\n\n        reversed.bruto = bruto\n        reversed.vat = vat\n        reversed.netto = netto\n\n        return reversed\n    }\n\n    /**\n     * Tells whether the VAT Line has a VAT (not being NO_VAT)\n     */\n    get hasVAT() : boolean {\n        return this.vatRate\n            ? this.vatRate.id !== NO_VAT.id\n            : false\n    }\n\n    /**\n     * Returns the VAT percentage of this line\n     */\n    get percentage(): number {\n        return this.vatRate ? this.vatRate.percentage : 0\n    }\n\n    /**\n     * Register that this line has been modified (touched)\n     *\n     * touch numbers are comparable between VAT lines to tell the last or most recently modified line\n     */\n    touch() {\n        VATLine._touched += 1\n        this.touched = VATLine._touched\n    }\n\n    /**\n     * Set the touched number back to an earlier saved number\n     */\n    untouch(touched: number) {\n        this.touched = touched\n    }\n\n    /**\n     * Set a VAT Rate for this line\n     */\n    setVATRate(vatRate: VATRate | null, bruto: string | number) {\n        if (this.vatRate === vatRate) return\n\n        this.touch()\n        this.vatRate = vatRate\n        if (vatRate) {\n            /* (Re-)calc */\n            this.bruto = \"\"\n        }\n        this.setBruto(bruto)\n    }\n\n    /**\n     * Set the bruto value for this line and derive vat and netto value\n     */\n    setBruto(bruto: string | number) {\n        const newBruto = VATLine.value2String(bruto)\n        if (newBruto === this.bruto) return\n\n        this.touch()\n        bruto = newBruto\n        if (isNaN(+bruto)) {\n            this.vat = \"\"\n            this.netto = \"\"\n        } else {\n            const { vat, netto } = VATLine.brutoNetto({bruto}, this.percentage)\n            this.vat = vat\n            this.netto = netto\n        }\n        this.bruto = bruto\n    }\n\n    /**\n     * Set the VAT value for this line and derive bruto and netto value\n     */\n    setVAT(vat: string | number) {\n        const newVAT = VATLine.value2String(vat)\n        if (newVAT === this.vat) return\n\n        this.touch()\n        vat = newVAT\n        if (isNaN(+vat)) {\n            this.bruto = \"\"\n            this.netto = \"\"\n        } else {\n            const { bruto, netto } = VATLine.brutoNetto({vat}, this.percentage)\n            this.bruto = bruto\n            this.netto = netto\n        }\n        this.vat = vat\n    }\n\n    /**\n     * Set the netto value for this line and derive bruto and netto value\n     */\n    setNetto(netto: string | number) {\n        const newNetto = VATLine.value2String(netto)\n        if (newNetto === this.netto) return\n\n        this.touch()\n        netto = newNetto\n        if (isNaN(+netto)) {\n            this.bruto = \"\"\n            this.vat = \"\"\n        } else {\n            const { bruto, vat } = VATLine.brutoNetto({netto}, this.percentage)\n            this.bruto = bruto\n            this.vat = vat\n        }\n        this.netto = netto\n    }\n\n    /**\n     * Converts a numeric value to a 2-decimal string representation\n     */\n    static value2String(value: string | number): string {\n        if (typeof value === \"number\") {\n            return value.toFixed(2)\n        }\n        return value\n    }\n\n    /**\n     * Calculates netto, bruto, and VAT given a single netto, bruto, and VAT value\n     */\n    static brutoNetto(brutoNetto: Partial<BrutoNetto>, percentage: number): BrutoNetto {\n        let { bruto, vat, netto } = brutoNetto\n\n        assert(Object.keys(brutoNetto).length === 1, \"Only one known value is expected\")\n\n        if (netto) {\n            const _vat = +netto * percentage\n            vat = this.value2String(_vat)\n            bruto = this.value2String(+netto + _vat)\n        } else if (vat) {\n            const _netto = percentage === 0 ? 0 : +vat / percentage\n            netto = this.value2String(_netto)\n            bruto = this.value2String(_netto + +vat)\n        } else if (bruto) {\n            const _netto = +bruto / (1 + percentage)\n            netto = this.value2String(_netto)\n            vat = this.value2String(+bruto - +netto)\n        } else {\n            return {\n                netto: \"\",\n                vat: \"\",\n                bruto: \"\"\n            }\n        }\n\n        return {\n            netto,\n            vat,\n            bruto\n        }\n    }\n\n    /**\n     * Add the VAT lines to a total bruto, VAT and netto value\n     */\n    static addVATLines(lines: VATSpecificationEntryData[], round?: (n: number) => number) {\n        let bruto = 0\n        let vat = 0\n        let netto = 0\n        lines.forEach(line => {\n            bruto += isNaN(+line.bruto) ? 0 : +line.bruto\n            vat += isNaN(+line.vat) ? 0 : +line.vat\n            netto += isNaN(+line.netto) ? 0 : +line.netto\n        })\n        if (round) {\n            bruto = round(bruto)\n            vat = round(vat)\n            netto = round(netto)\n        }\n        return { bruto, vat, netto }\n    }\n\n    /**\n     * Reverse a collection to VAT lines\n     */\n    static reverseLines(lines: VATLine[]) {\n        return lines.map(line => line.reversed)\n    }\n\n    /**\n     * Return the total and remaining value given a collection of VAT lines and a bruto total value\n     */\n    static getTotalRemaining(lines: VATLine[], bruto: number) {\n        const total = VATLine.addVATLines(lines.map(line => line.data))\n        let remaining = bruto - total.bruto\n        if (Amount.fromAmountCurrency(remaining).isZero()) {\n            remaining = 0\n        }\n        return {total, remaining}\n    }\n\n    /**\n     * Auto-populate a collection of VAT lines to match the desired bruto value\n     * If bruto is null, no auto-population is performed\n     */\n    static updateVATChoices(lines: VATLine[], bruto: number, auto: boolean) {\n        lines = lines.filter(line => line.vatRate)\n\n        if (lines.length && auto) {\n            let {remaining} = this.getTotalRemaining(lines, bruto)\n\n            if (remaining !== 0) {\n                // Allocate any remaining quantity to the oldest lines\n                // A correction can not result in a negative line or a line with a value that exceeds bruto\n\n                if (lines.length === 1 && remaining !== 0 && lines[0].hasVAT) {\n                    // Auto-add no-VAT line to compensate\n                    const noVATLine = new VATLine(NO_VAT, remaining)\n                    lines.push(noVATLine)\n                } else {\n                    // Adjust oldest line to compensate\n                    const sortedLines = VATLine.getSortedLines(lines)\n                    sortedLines.forEach(line => {\n                        if (remaining !== 0) {\n                            // Example: value = 25, remaining = -50\n                            // New bruto is max(0, 25 - 50 = -25) = 0\n                            // Remaining is -50 + (25 - 0)\n                            const bruto = +line.bruto + remaining\n                            remaining += +line.bruto - bruto\n                            // Auto-adjust does no count as touched (no-user initiated adjustment)\n                            const touched = line.touched\n                            line.setBruto(bruto)\n                            line.untouch(touched)\n                        }\n                    })\n                }\n            }\n        }\n\n        if (lines.length === 0) {\n            lines.push(new VATLine(NO_VAT, bruto))\n        } else {\n            lines.push(new VATLine())\n        }\n\n        return lines\n    }\n\n    /**\n     * Sorts a collection of VAT lines on last modified (touched)\n     *\n     * The last modified VAT line will be the first line\n     */\n    static getSortedLines(lines: VATLine[]) {\n        return [...lines].sort((l1, l2) => l1.touched - l2.touched)\n    }\n}\n","import { JournalEntry } from \"../Journal/JournalEntry\"\nimport { VATSpecificationEntryData } from \"../../model\"\n\n/**\n * A VAT Declaration item is a journalEntry and the VATLines for this entry for the VAT Category\n *\n * Example: a journalEntry with all VAT lines that have VAT high\n */\nexport interface VATDeclarationItemDetails {\n    journalEntry?: JournalEntry\n    vatLines: VATSpecificationEntryData[]\n}\n\n/**\n * Returns all VATSpecificationEntryData that is contained in the given details\n */\nexport const getLines = (details: VATDeclarationItemDetails[]):VATSpecificationEntryData[]  => {\n    return details.reduce((lines, detail) => {\n        lines = lines.concat(detail.vatLines)\n        return lines\n    }, [] as VATSpecificationEntryData[])\n}\n\n/**\n * A VAT declaration item contains a netto-vat-bruto overview\n * and the details that have lead to the netto-vat-bruto outcome\n */\nexport interface VATDeclarationItem {\n    netto: number | null\n    vat: number | null\n    bruto: number | null\n    details: VATDeclarationItemDetails[]\n    declared?: number | null\n}\n\n/**\n * Not all VAT declaration items are calculated\n *\n * Non-calculated items will be assiged a NO_VAT_CALCULATION value\n */\nexport const NO_VAT_CALCULATION: VATDeclarationItem = {\n    netto: 0,\n    vat: 0,\n    bruto: 0,\n    details: []\n}\n\n/**\n * Not all VAT declaration items are calculated\n *\n * Non-calculated foreign-VAT items will be assiged a NO_FOREIGN_VAT_CALCULATION value\n */\nexport const NO_FOREIGN_VAT_CALCULATION: VATDeclarationItem = {\n    netto: 0,\n    vat: null,\n    bruto: null,\n    details: []\n}\n","import { Journal } from \"../Journal/Journal\"\nimport { VAT_HIGH, VAT_LOW } from \"./VATHistory\"\nimport { VATLine } from \"./VATLine\"\nimport { VATSpecificationEntryData } from \"../../model\"\nimport assert from \"assert\"\nimport { VATDeclarationPeriod } from \"./VATDeclarationPeriod\"\nimport {\n    getLines,\n    NO_FOREIGN_VAT_CALCULATION,\n    NO_VAT_CALCULATION,\n    VATDeclarationItemDetails\n} from \"./VATDeclarationItem\"\nimport { NO_VAT, VATRate } from \"./VATRate\"\nimport { VATRates } from \"./VATRates\"\nimport { JournalEntry } from \"../Journal/JournalEntry\"\nimport { Accounting } from \"../Accounting\"\n\n/**\n * Template for an empt manual VAT specification entry\n */\nconst EmptyVATSpecificationEntryData = {\n    id: \"\",\n    bruto: \"0\",\n    vat: \"0\",\n    netto: \"0\",\n}\n\n/**\n * Reverse the bruto-vat-netto amounts in a VAT specification entry\n */\nexport function reverseData(data: VATSpecificationEntryData): VATSpecificationEntryData {\n    const reversed = VATLine.reverseBrutoVATNetto({\n        bruto: data.bruto,\n        vat: data.vat,\n        netto: data.netto\n    })\n    return {...data, ...reversed}\n}\n\n/**\n * Definition of the VAT declaration categories that are calculated or entered manually in the VAT declaration\n */\nexport enum VATDeclarationTag {\n    High = \"Hoog\",\n    Low = \"Laag\",\n    PrivateUse = \"Prive gebruik\",\n    Paid = \"Betaald\",\n    Declared = \"Aangifte bedrag\"\n}\n\n/**\n * Definition of the VAT declaration categories that allow for a manual entry\n */\nexport type ManualId = VATDeclarationTag.High |\n    VATDeclarationTag.Low |\n    VATDeclarationTag.PrivateUse |\n    VATDeclarationTag.Paid\n\n/**\n * VAT Declaration\n *\n * Generates and holds a VAT Declaration for the given journal in the given declaration period\n */\nexport class VATDeclaration {\n    public currency: string = Accounting.currency\n    public vatSpecificationEntryDatas: VATSpecificationEntryData[]\n    public readonly manualVATs: Record<ManualId, VATSpecificationEntryData> = {\n        [VATDeclarationTag.High]: {...EmptyVATSpecificationEntryData},\n        [VATDeclarationTag.Low]: {...EmptyVATSpecificationEntryData},\n        [VATDeclarationTag.PrivateUse]: {...EmptyVATSpecificationEntryData},\n        [VATDeclarationTag.Paid]: {...EmptyVATSpecificationEntryData},\n    }\n\n    constructor(public readonly journal: Journal,\n                public readonly period: VATDeclarationPeriod,\n                manualVATs?: Record<ManualId, VATSpecificationEntryData>) {\n        this.vatSpecificationEntryDatas = []\n        if (manualVATs) {\n            // Explicit definition of manual VAT entries\n            this.manualVATs = manualVATs\n        } else if (journal.hasJournalEntry(this.id)) {\n            // Adjust the manual VAT specification for the amount that has been declared in any previous session\n            const journalEntry = journal.getJournalEntry(this.id)\n            this.manualVATs[VATDeclarationTag.PrivateUse].vat =\n                (-1 * this.declaredAmount(journalEntry, VATDeclarationTag.PrivateUse)).toFixed(2)\n        }\n    }\n\n    /**\n     * Returns the VAT Rate for the given VAT category\n     */\n    getVATRate(category: string): VATRate {\n        const rateIds: Record<ManualId, string> = {\n            [VATDeclarationTag.High]: VAT_HIGH,\n            [VATDeclarationTag.Low]: VAT_LOW,\n            [VATDeclarationTag.PrivateUse]: NO_VAT.id,\n            [VATDeclarationTag.Paid]: NO_VAT.id,\n        };\n        const manualId = VATDeclaration.getManualId(category)\n        const rateId = rateIds[manualId] || NO_VAT.id\n        const rates = new VATRates(this.period.endDate)\n        return rates.rates[rateId]\n    }\n\n    /**\n     * Unique identification of this declaration\n     */\n    get id() {\n        const { year, quarter } = this.period\n        return `BTW Aangifte ${year} kwartaal ${quarter}`\n    }\n\n    /**\n     * Tells whether this given category is a VAT expense (VAT paid) category\n     */\n    static isExpenseCategory(category: string): boolean {\n        const manualId = VATDeclaration.getManualId(category)\n        return manualId === VATDeclarationTag.Paid\n    }\n\n    /**\n     * Returns the VAT declaration category for the given VAT category\n     *\n     * Example: 1a Leveringen/diensten belast algemeen tarief => VATDeclarationTag.High\n     */\n    static getManualId(category: string): ManualId {\n        const mapping: Record<string, ManualId> = {\n            \"1a\": VATDeclarationTag.High,\n            \"1b\": VATDeclarationTag.Low,\n            \"1d\": VATDeclarationTag.PrivateUse,\n            \"5b\": VATDeclarationTag.Paid\n        }\n        return mapping[category.substr(0, 2)]\n    }\n\n    /**\n     * Register a manual VAT entry for the given category\n     */\n    setManualVAT(category: string, data: VATSpecificationEntryData) {\n        const manualId = VATDeclaration.getManualId(category)\n        if (VATDeclaration.isExpenseCategory(category)) {\n            data = reverseData(data)\n        }\n        this.manualVATs[manualId] = data\n    }\n\n    /**\n     * Get the VAT declaration items for the VAT Categories High VAT, Low VAT and Paid VAT\n     */\n    private getVATs() {\n        const highVAT: VATDeclarationItemDetails[] = []\n        const lowVAT: VATDeclarationItemDetails[] = []\n        const paidVAT: VATDeclarationItemDetails[] = []\n\n        this.journal.journalEntries\n            .filter(journalEntry => journalEntry.vatDate &&\n                this.period.startDate <= journalEntry.vatDate && journalEntry.vatDate <= this.period.endDate)\n            .forEach(journalEntry => {\n                // Single currency VAT declaration\n                assert(!this.currency || this.currency === journalEntry.allocatedLeg.amount.currency)\n                const vat = journalEntry.getVAT()!\n                this.currency = journalEntry.allocatedLeg.amount.currency\n\n                if (journalEntry.allocatedLeg.amount.isCredit) {\n                    [VAT_HIGH, VAT_LOW].forEach(vatRateId => {\n                        const vatLines = vat.lines.filter(line => line.id === vatRateId)\n                        if (vatLines.length) {\n                            const entry = {journalEntry, vatLines}\n                            vatRateId === VAT_HIGH ? highVAT.push(entry) : lowVAT.push(entry)\n                        }\n                    })\n                } else {\n                    paidVAT.push({journalEntry, vatLines: vat.lines})\n                }\n            })\n\n        const manualEntry = (id: ManualId) => ({\n            vatLines: [this.manualVATs[id]]\n        })\n\n        return {\n            highVAT: highVAT.concat(manualEntry(VATDeclarationTag.High)),\n            lowVAT: lowVAT.concat(manualEntry(VATDeclarationTag.Low)),\n            paidVAT: paidVAT.concat(manualEntry(VATDeclarationTag.Paid)),\n            privateUseVAT: [manualEntry(VATDeclarationTag.PrivateUse)]\n        }\n    }\n\n    /**\n     * Get the VAT to be declared for this period\n     *\n     * The rounded=true figures are for the declaration\n     * The rounded=false figures are for the journalEntry\n     */\n    private getDeclaredVAT(rounded: boolean) {\n        const { highVAT, lowVAT, paidVAT, privateUseVAT } = this.getVATs()\n\n        const round = rounded ? Math.floor : undefined\n\n        const totalHigh = VATLine.addVATLines(getLines(highVAT), round)\n        const totalLow = VATLine.addVATLines(getLines(lowVAT), round)\n        const totalPrivateUse = VATLine.addVATLines(getLines(privateUseVAT), round)\n        const totalPaid = VATLine.addVATLines(getLines(paidVAT), round)    // ceil for negative amounts\n\n        const totalDue = totalHigh.vat + totalLow.vat + totalPrivateUse.vat\n\n        return {\n            highVAT,\n            totalHigh,\n            lowVAT,\n            totalLow,\n            privateUseVAT,\n            totalPrivateUse,\n            totalPaid,\n            paidVAT,\n            totalDue,\n            total: totalDue + totalPaid.vat\n        }\n    }\n\n    /**\n     * Returns the data that is required for constructing the journalEntry for this period\n     */\n    getJournalData() {\n        const declaredVAT = this.getDeclaredVAT(true)\n        const rawVAT = this.getDeclaredVAT(false)\n\n        return { declaredVAT, rawVAT }\n    }\n\n    /**\n     * Return the total VAT to be paid or to be claimed for this period\n     */\n    get total() {\n        return this.getDeclaredVAT(true).total\n    }\n\n    /**\n     * Returns the declared amount for the given tag\n     */\n    declaredAmount(journalEntry: JournalEntry | null, tag: VATDeclarationTag) {\n        if (journalEntry) {\n            const leg = journalEntry.getLeg(tag)\n            return leg ? leg.amount.value : 0\n        } else {\n            return 0\n        }\n    }\n\n    /**\n     * Returns a VAT declaration document for this declaration period\n     */\n    getDeclarationDocument(journalEntry: JournalEntry | null = null) {\n        const {\n            highVAT,\n            totalHigh,\n            lowVAT,\n            totalLow,\n            privateUseVAT,\n            totalPrivateUse,\n            totalPaid,\n            paidVAT,\n            totalDue,\n        } = this.getDeclaredVAT(true)\n\n        return {\n            \"1. Prestaties binnenland\": {\n                \"1a Leveringen/diensten belast algemeen tarief\": {\n                    netto: totalHigh.netto,\n                    vat: totalHigh.vat,\n                    bruto: totalHigh.bruto,\n                    details: highVAT,\n                    declared: this.declaredAmount(journalEntry, VATDeclarationTag.High)\n                },\n                \"1b Leveringen/diensten belast met verlaagd tarief\": {\n                    netto: totalLow.netto,\n                    vat: totalLow.vat,\n                    bruto: totalLow.bruto,\n                    details: lowVAT,\n                    declared: this.declaredAmount(journalEntry, VATDeclarationTag.Low)\n                },\n                \"1c Leveringen/diensten belast met overige tarieven behalve 0%\": NO_VAT_CALCULATION,\n                \"1d Prive-gebruik\": {\n                    netto: null,\n                    vat: totalPrivateUse.vat,\n                    bruto: null,\n                    details: privateUseVAT,\n                    declared: this.declaredAmount(journalEntry, VATDeclarationTag.PrivateUse)\n                },\n                \"1e Leveringen/diensten belast met 0% of niet bij u belast\": NO_FOREIGN_VAT_CALCULATION,\n            },\n            \"2. Verleggingsregelingen binnenland\": {\n                \"2a Leveringen/diensten waarbij de heffing van omzetbelasting naar u is verlegd\": NO_VAT_CALCULATION,\n            },\n            \"3. Prestaties naar/in het buitenland\": {\n                \"3a Leveringen naar landen buiten de EU (uitvoer)\": NO_FOREIGN_VAT_CALCULATION,\n                \"3b Leveringen naar/diensten in landen binnen de EU\": NO_FOREIGN_VAT_CALCULATION,\n                \"3c Installatie/afstandsverkopen binnen de EU\": NO_FOREIGN_VAT_CALCULATION,\n            },\n            \"4. Prestaties uit het buitenland aan u verricht\": {\n                \"4a Leveringen/diensten uit landen buiten de EU\": NO_VAT_CALCULATION,\n                \"4b Leveringen/diensten uit landen binnen de EU\": NO_VAT_CALCULATION,\n            },\n            \"5. Voorbelasting, kleineondernemersregeling,schatting en eindtotaal\": {\n                \"5a Verschuldigde omzetbelasting\": {\n                    netto: null,\n                    vat: totalDue,\n                    bruto: null,\n                    details: []\n                },\n                \"5b Voorbelasting\": {\n                    netto: null,\n                    vat: totalPaid.vat,\n                    bruto: null,\n                    details: paidVAT,\n                    declared: this.declaredAmount(journalEntry, VATDeclarationTag.Paid)\n                },\n                \"5c Subtotaal\": {\n                    netto: null,\n                    vat: this.total,\n                    bruto: null,\n                    details: [],\n                },\n            }\n        }\n    }\n}\n","import { EntryLegData, JournalEntryData, VATSpecificationData } from \"../../model\"\nimport { EntryLeg } from \"./EntryLeg\"\nimport { Amount } from \"../Amount\"\nimport { LedgerAccount } from \"../Ledger/LedgerAccount\"\nimport { DateString } from \"../DateString\"\nimport { Period } from \"../Period\"\nimport { VATLine } from \"../VAT/VATLine\"\nimport { LEDGER_ACCOUNT } from \"../../config\"\nimport { VATDeclaration, VATDeclarationTag } from \"../VAT/VATDeclaration\"\nimport assert from \"assert\"\n\n/**\n * JournalEntry\n * A balanced collection of account bookings\n * The sum of the debited and credited accounts is 0\n *\n * A JournalEntry normally gets created on the basis of the allocation of a bank mutation\n * The allocated leg is the side that describes how the bank mutation is booked\n * The opposite leg is the side that books on the associated ledgerAccount of the bankAccount\n */\nexport class JournalEntry {\n    constructor(readonly data: JournalEntryData) {}\n\n    get id(): string { return this.data.id }\n    get reason(): string { return this.data.reason }\n    get period(): Period { return new Period(this.data.period) }\n    get date(): DateString { return new DateString(this.data.date) }\n    get legs(): EntryLeg[] { return this.data.entryLegsData.map(data => new EntryLeg(data))}\n\n    /**\n     * Checks the integrity of the journalEntry\n     *\n     * The sum of all amounts of all legs should be 0\n     */\n    checkIntegrity() {\n        const sum = this.legs\n            .map(leg => leg.amount)\n            .reduce((sum, amount) => sum.add(amount), new Amount())\n        assert(sum.isZero(), `The ${this.legs.length} legs sum up to ${sum}`)\n    }\n\n    getLeg(tag: string) {\n        return this.legs.find(leg => leg.tag === tag)\n    }\n\n    /**\n     * Construct a JournalEntry from the given allocation data\n     */\n    public static fromAllocation(id: string,\n                                 amount: Amount,\n                                 date: DateString,\n                                 period: Period,\n                                 reason: string,\n                                 account: LedgerAccount,\n                                 oppositeAccount: LedgerAccount): JournalEntry {\n\n        const oppositeLeg:EntryLegData = {\n            ledgerAccountCode: oppositeAccount.code,\n            amountData: amount.reversed().data\n        }\n\n        const allocatedLeg:EntryLegData = {\n            ledgerAccountCode: account.code,\n            amountData: amount.data\n        }\n\n        const entry = new JournalEntry({\n            id,\n            date: date.data,\n            period: period.data,\n            reason,\n            entryLegsData: [oppositeLeg, allocatedLeg]\n        })\n        entry.checkIntegrity()\n        return entry\n    }\n\n    /**\n     * Construct a new JournalEntry for the given VAT declaration\n     */\n    public static fromVATDeclaration(declaration: VATDeclaration) {\n        const id: string = declaration.id\n        const currency = declaration.currency\n        const { declaredVAT, rawVAT } = declaration.getJournalData()\n\n        const declared = declaredVAT.total\n        const difference = rawVAT.total - declared\n\n        const DeclarationAccount = (value: number) => value < 0\n            ? LEDGER_ACCOUNT.VAT_TO_BE_CLAIMED\n            : LEDGER_ACCOUNT.VAT_TO_BE_PAID\n\n        const entryLegsData = [\n            // High VAT\n            {\n                ledgerAccountCode: LEDGER_ACCOUNT.VAT_TO_BE_PAID,\n                amountData: Amount.fromAmountCurrency(-rawVAT.totalHigh.vat, currency),\n                tag: VATDeclarationTag.High\n            },\n            // Low VAT\n            {\n                ledgerAccountCode: LEDGER_ACCOUNT.VAT_TO_BE_PAID,\n                amountData: Amount.fromAmountCurrency(-rawVAT.totalLow.vat, currency),\n                tag: VATDeclarationTag.Low\n            },\n            // Private use\n            {\n                ledgerAccountCode: LEDGER_ACCOUNT.VAT_PRIVATE_USE,\n                amountData: Amount.fromAmountCurrency(-rawVAT.totalPrivateUse.vat, currency),\n                tag: VATDeclarationTag.PrivateUse\n            },\n            // Paid VAT\n            {\n                ledgerAccountCode: LEDGER_ACCOUNT.VAT_TO_BE_CLAIMED,\n                amountData: Amount.fromAmountCurrency(-rawVAT.totalPaid.vat, currency),\n                tag: VATDeclarationTag.Paid\n            },\n            // Difference between declared VAT and actual VAT\n            {\n                ledgerAccountCode: LEDGER_ACCOUNT.PAYMENT_DIFFERENCES,\n                amountData: Amount.fromAmountCurrency(difference, currency)\n            },\n        ]\n            .filter(data => !data.amountData.isZero())\n            .map(data => ({...data, amountData: data.amountData.data}))\n            .concat(\n                // Declared VAT\n                {\n                    ledgerAccountCode: DeclarationAccount(declaredVAT.total),\n                    amountData: Amount.fromAmountCurrency(declaredVAT.total, currency).data,\n                    tag: VATDeclarationTag.Declared\n                },\n            )\n\n        const entry = new JournalEntry({\n            id,\n            date: DateString.fromDate(new Date()).data,\n            period: new Period(declaration.period.year.toString()).data,\n            reason: id,\n            entryLegsData\n        })\n\n        entry.checkIntegrity()\n        return entry\n    }\n\n    /**\n     * Returns the vatLegs for this journalEntry, possible an empty array\n     */\n    get vatLegs(): EntryLeg[] {\n        return this.data.entryLegsData\n            .filter((_, i) => i >= 2)\n            .map(data => new EntryLeg(data))\n    }\n\n    /**\n     * Returns the VAT date for this journalEntry\n     *\n     * If no VAT is applicable to this journalEntry, null is returned\n     */\n    get vatDate(): Date | null {\n        const vat = this.getVAT()\n        if (vat) {\n            return new Date(vat.date)\n        } else {\n            return null\n        }\n    }\n\n    /**\n     * Returns the VAT specification data, or null if no VAT specification exists for this journalEntry\n     */\n    getVAT(): VATSpecificationData | null {\n        return this.data.vatSpecificationData || null\n    }\n\n    /**\n     * Set VAT, ie add VAT lines and a VAT specification to this journalEntry\n     */\n    setVAT(vatSpecificationData: VATSpecificationData) {\n        this.data.entryLegsData.splice(2)\n        const { lines } = vatSpecificationData\n        if (lines.length > 0) {\n            this.data.vatSpecificationData = vatSpecificationData\n            const netto = VATLine.addVATLines(lines).netto\n            const currency = this.allocatedLeg.amount.currency\n            lines.forEach(line => {\n                if (+line.vat !== 0) {\n                    this.data.entryLegsData.push({\n                        ledgerAccountCode: +line.vat < 0\n                            ? LEDGER_ACCOUNT.VAT_TO_BE_CLAIMED\n                            : LEDGER_ACCOUNT.VAT_TO_BE_PAID,\n                        amountData: Amount.fromAmountCurrency(+line.vat, currency).data\n                    })\n                }\n            })\n            // Alternative: amount = opposite.amount - vat\n            this.allocatedLeg.data.amountData = Amount.fromAmountCurrency(+netto, currency).data\n        } else {\n            this.data.vatSpecificationData = undefined\n            this.allocatedLeg.data.amountData = this.oppositeLeg.amount.reversed().data\n        }\n        this.checkIntegrity()\n    }\n\n    /**\n     * Returns the EntryLeg with the opposite account\n     */\n    get oppositeLeg(): EntryLeg {\n        return this.legs[0]\n    }\n\n    /**\n     * Returns the EntryLeg with the allocated account\n     */\n    get allocatedLeg(): EntryLeg {\n        return this.legs[1]\n    }\n\n    /**\n     * Sets the reason (description) for the journalEntry\n     */\n    set reason(reason: string) {\n        this.data.reason = reason\n    }\n\n    /**\n     * Sets the period for the journalEntry\n     */\n    set period(period: Period) {\n        this.data.period = period.data\n    }\n}\n","/**\n * Base class for all data-mapped classes\n *\n * The methods in this class allow for a mapping between the raw data and its corresponding class\n * See the test files for an example how to use the DataMapping class to construct an intelligent (javascript-like) Map\n */\nexport class DataMapping<MapData extends Record<string, Data>, Data> {\n    readonly data: Record<string, Data>\n\n    constructor(data: MapData) {\n        this.data = data\n    }\n\n    hasData(): boolean { return Object.keys(this.data).length > 0 }\n    get size(): number { return Object.keys(this.data).length }\n\n    protected hasItem(id: string): boolean { return id in this.data }\n\n    private get items(): Data[] { return Object.values(this.data) }\n    private get entries(): [string, Data][] { return Object.entries(this.data) }\n\n    protected addItem(key: string, data: Data): void { this.data[key] = data }\n    protected delItem(key: string): void { delete this.data[key]}\n\n    protected getItems<T>(type: { new(data: Data): T }): T[] {\n        return this.items.map(data => new type(data))\n    }\n    protected getItem<T>(type: { new(data: Data): T }, id: string): T {\n        return new type(this.data[id])\n    }\n\n    protected addItemIfNotExists(key: string, data: Data): void {\n        if (!this.hasItem(key)) {\n            this.addItem(key, data)\n        }\n    }\n\n    protected filter<T>(type: { new(data: MapData): T }, condition: (key: string, data: Data) => boolean): T {\n        /**\n         * Returns a filtered copy of the data\n         */\n        return new type(this.entries.reduce((result, [key, data]) => {\n            if (condition(key, data)) {\n                result[key] = data\n            }\n            return result\n        }, {} as Record<string, Data>) as MapData)\n    }\n\n    protected modify<T>(type: { new(data: MapData): T }, f: (data: Data) => Data): T {\n        /**\n         * Returns a modified copy of the data.\n         * Take care to provide a modification function that does not alter the original data\n         */\n        return new type(this.entries.reduce((result, [key, data]) => {\n            result[key] = f(data)\n            return result\n        }, {} as Record<string, Data>) as MapData)\n    }\n\n    protected distinctValues<T>(getValue: (key: string, data: Data) => T): T[] {\n        /**\n         * Returns an array of distinct attribute values of the Data\n         */\n        const result = this.entries.reduce((result, [key, value]) => {\n            result.add(getValue(key, value))\n            return result\n        }, new Set<T>())\n        return Array.from(result)\n    }\n}","import assert from \"assert\"\n\nimport { JournalEntry } from \"./JournalEntry\"\nimport { PeriodFilter } from \"../PeriodFilter\"\nimport { JournalEntryData, JournalEntryMapData } from \"../../model\"\nimport { DataMapping } from \"../DataMapping\"\nimport { Period } from \"../Period\"\nimport { EntryLeg } from \"./EntryLeg\"\n\n/**\n * A Journal is a collection of JournalEntries indexed on id\n */\nexport class Journal extends DataMapping<JournalEntryMapData, JournalEntryData> {\n\n    /**\n     * Return a list of all JournalEntries in the Journal\n     */\n    get journalEntries(): JournalEntry[] { return this.getItems(JournalEntry) }\n\n    /**\n     * Get the JournalEntry with the given id\n     * @throws Throws an AssertionError if the id can not be found\n     */\n    getJournalEntry(id: string): JournalEntry {\n        assert(this.hasItem(id))\n        return this.getItem(JournalEntry, id)\n    }\n\n    hasJournalEntry(id: string): boolean {\n        return this.hasItem(id)\n    }\n\n    public reversed(): Journal {\n        const reversedLegs = (entryData: JournalEntryData) => ({\n            ...entryData,\n            entryLegsData: entryData.entryLegsData.map(data => new EntryLeg(data).reversed().data)\n        })\n        return this.modify(Journal, reversedLegs)\n    }\n\n    /**\n     * Return a sorted list of Periods that occur in the journal\n     */\n    public distinctPeriods(): Period[] {\n        const getPeriod = (_: string, data: JournalEntryData) => data.period\n        return this\n            .distinctValues(getPeriod)\n            .sort()\n            .map(data => new Period(data))\n    }\n\n    /**\n     * Get a new (filtered) journal with only entries that match the given periodFilter\n     */\n    public filterOnPeriod(periodFilter: PeriodFilter): Journal {\n        const matchesPeriodFilter = (_: string, journalEntryData: JournalEntryData) =>\n            periodFilter.periodInRange(new JournalEntry(journalEntryData).period)\n        return this.filter(Journal, matchesPeriodFilter)\n    }\n\n    /**\n     * Get a new (modified) journal with only legs that are of the specified ledgerAccount\n     */\n    public filterOnAccount(filterLeg: (leg: EntryLeg) => boolean): Journal {\n        const ledgerAccountLegsOnly = (entry: JournalEntryData) => ({\n            ...entry,\n            entryLegsData: new JournalEntry(entry).legs.filter(filterLeg).map(l => l.data)\n        })\n        return this.modify(Journal, ledgerAccountLegsOnly)\n    }\n\n    /**\n     * Add a journalEntry to the Journal (only if the entry does not yet exist)\n     */\n    public add(journalEntry: JournalEntry): void {\n        this.addItemIfNotExists(journalEntry.id, journalEntry.data)\n    }\n\n    /**\n     * Remove the given journalEntry from the Journal\n     */\n    remove(journalEntry: JournalEntry): void {\n        this.delItem(journalEntry.id)\n    }\n}\n","import { Amount } from \"../Amount\"\nimport { AccountBalanceData } from \"../../model\"\nimport { DateString } from \"../DateString\"\n\n/**\n * The account balance is the amount of money present at a given moment\n */\nexport class AccountBalance {\n    constructor(readonly data: AccountBalanceData = {\n        date: \"\",\n        amountData: new Amount().data\n    }) {}\n\n    /**\n     * Returns the amount of money\n     */\n    get amount(): Amount { return new Amount(this.data.amountData)}\n\n    /**\n     * Returns the date for which the balance is valid\n     */\n    get date(): DateString { return new DateString(this.data.date) }\n}","import { AccountStatementData } from \"../../model\"\nimport { AccountBalance } from \"./AccountBalance\"\n\n/**\n * An account statement is a periodic summary of account activity with a beginning date and an ending date\n */\nexport class AccountStatement {\n    constructor(readonly data: AccountStatementData) {}\n\n    /**\n     * The unique identification of the accountStatement\n     */\n    get id() {\n        return this.data.id\n    }\n\n    /**\n     * The amount of money present at the end date of the accountStatement\n     */\n    get closingBalance() {\n        return new AccountBalance(this.data.closingBalanceData)\n    }\n\n    /**\n     * The amount of money present at the begin date of the accountStatement\n     */\n    get openingBalance() {\n        return new AccountBalance(this.data.openingBalanceData)\n    }\n}\n","import { StatementEntryData } from \"../../model\"\nimport { Amount } from \"../Amount\"\nimport { DateString } from \"../DateString\"\nimport { AccountStatement } from \"./AccountStatement\"\nimport { Accounting } from \"../Accounting\"\nimport { memoize } from \"../../services/memoize\"\n\n/**\n * StatementEntry\n *\n * Specification of a deposit made into the bank account or a payment made out\n *\n * - Deposits in the form of income, cash deposits, etc.\n * - Withdrawals in the form of cash, cheques, etc.\n * - Any interest that was made on the account\n * - Any bank fees or charges for service\n */\nexport class StatementEntry {\n    constructor(readonly data: StatementEntryData) {}\n\n    /**\n     * Unique identification of the StatementEntry\n     */\n    get id(): string {\n        return this.data.id\n    }\n\n    /**\n     * Returns the AccountStatement on which this StatementEntry is mentioned\n     */\n    @memoize()\n    get accountStatement(): AccountStatement {\n        return new Accounting().liquidAssets.getAccountStatement(this.data.accountStatementRef)\n    }\n\n    /**\n     * Returns the party that is at the other side of this StatementEntry (creditor, debtor or bank)\n     */\n    get relatedParties(): string {\n        return this.data.relatedParties\n    }\n\n    /**\n     * The date when the transaction actually carries out or is supposed to carry out.\n     */\n    get valueDate(): DateString {\n        return new DateString(this.data.valueDate)\n    }\n\n    /**\n     * The date when the bank posts it in your account\n     */\n    get bookDate(): DateString {\n        return new DateString(this.data.bookDate)\n    }\n\n    /**\n     * The amount that is deposited of withdrawn from the BankAccount\n     */\n    get amount(): Amount {\n        return new Amount(this.data.amountData)\n    }\n\n    /**\n     * A description for the deposit of withdrawal\n     */\n    get description(): string {\n        return [this.data.relatedParties, this.data.remittanceInformation].join(\" \").trim()\n    }\n\n    /**\n     * The year in which the transaction is booked (valueDate)\n     */\n    get year(): string {\n        return this.valueDate.year\n    }\n\n    /**\n     * Tells whether a StatementEntry is similar to another StatementEntry\n     *\n     * This can be used to book similar entries on the same LedgerAccount\n     */\n    isSimilar(other: StatementEntry) {\n        return this.relatedParties.trim().toLowerCase() === other.relatedParties.trim().toLowerCase()\n    }\n}","import { StatementEntryData, StatementEntryMapData } from \"../../model\"\nimport { Amount, CreditDebit } from \"../Amount\"\nimport { StatementEntry } from \"./StatementEntry\"\nimport { DataMapping } from \"../DataMapping\"\nimport { PeriodFilter } from \"../PeriodFilter\"\nimport { DateString } from \"../DateString\"\n\nexport interface EntryTotals {\n    statements: number,\n    total: Amount,\n    debit: Amount,\n    credit: Amount\n}\n\n/**\n * Record of StatementEntries indexed by id\n */\nexport class StatementEntryMap extends DataMapping<StatementEntryMapData, StatementEntryData> {\n\n    /**\n     * Get a list of all StatementEntries\n     */\n    get statementEntries(): StatementEntry[] { return this.getItems(StatementEntry) }\n\n    /**\n     * Get a StatementEntry by id\n     */\n    getStatementEntry(id: string): StatementEntry { return this.getItem(StatementEntry, id) }\n\n    /**\n     * Tells whether the given StatementEntry is contained in this Record\n     */\n    contains(statementEntry: StatementEntry) { return this.hasItem(statementEntry.id) }\n\n    /**\n     * Get a list of StatementEntries that are considered similar to the given statementEntry\n     *\n     * The list will at least have one StatementEntry as an entry is considered similar to itself\n     */\n    getSimilarEntries(entry: StatementEntry): StatementEntry[] {\n        return this.getItems(StatementEntry)\n            .filter(e => e.isSimilar(entry))\n    }\n\n    /**\n     * Returns a new StatementEntryMap with only entries that match the given filter\n     */\n    filterOnPeriod(periodFilter: PeriodFilter): StatementEntryMap {\n        return this.filter(StatementEntryMap,(_, statementEntryData) =>\n            periodFilter.dateInRange(new DateString(statementEntryData.valueDate)))\n    }\n\n    /**\n     * Get the totals (count, total, total debit, total credit) of all entries in this Record\n     */\n    getTotals(): EntryTotals {\n        return this.getItems(StatementEntry)\n            .reduce((totals: EntryTotals, statement) => {\n                const amount = statement.amount\n\n                totals.statements += 1\n                totals.total = totals.total.add(amount)\n                if (amount.creditDebit === CreditDebit.Credit) {\n                    totals.credit = totals.credit.add(amount)\n                } else {\n                    totals.debit = totals.debit.add(amount)\n                }\n                return totals\n            }, {\n                statements: 0,\n                total: new Amount(),\n                debit: new Amount(),\n                credit: new Amount()\n            } as EntryTotals)\n    }\n}","interface FormatProps {\n    short?: boolean\n}\n\n/**\n * Simple class to hold an IBAN value\n */\nexport class IBAN {\n    data: string\n\n    constructor(s: string) {\n        this.data = s\n    }\n\n    /**\n     * Returns a formatted presentation of the IBAN\n     */\n    format(props: FormatProps = {}): string {\n        const short = props.short ?? false\n\n        if (this.data.length > 9 && !short) {\n            // ISO13616\n            // IBAN is traditionally expressed in groups of four characters separated by spaces\n            const EVERY_FOUR_CHARS =/(.{4})(?!$)/g\n            return this.data.replace(EVERY_FOUR_CHARS, `$1 `)\n        } else if (this.data.length === 9 || short) {\n            const s = this.data.substr(this.data.length - 9)\n            return s.replace(/^(.{2})(.{2})(.{2})(.*)$/, `$1.$2.$3.$4`)\n        } else {\n            return this.data\n        }\n    }\n\n    /**\n     * Converts the IBAN to a string value\n     */\n    toString(): string {\n        return this.format()\n    }\n}","import {\n    AccountStatementData,\n    AccountStatementMapData,\n} from \"../../model\"\nimport { PeriodFilter } from \"../PeriodFilter\"\nimport { DateString } from \"../DateString\"\nimport { DataMapping } from \"../DataMapping\"\nimport { AccountStatement } from \"./AccountStatement\"\nimport { sortedArray } from \"../../services/utils\"\nimport { AccountBalance } from \"./AccountBalance\"\nimport { memoize } from \"../../services/memoize\"\n\n/**\n * A Record of AccountStatements indexed by id\n */\nexport class AccountStatementMap extends DataMapping<AccountStatementMapData, AccountStatementData> {\n\n    /**\n     * Returns an AccountStatementMap with statements that match the given periodFilter\n     */\n    filterOnPeriod(periodFilter: PeriodFilter): AccountStatementMap {\n        const filterCondition = (_: string, accountStatementData: AccountStatementData) =>\n            periodFilter.dateInRange(new DateString(accountStatementData.closingBalanceData.date))\n        return this.filter(AccountStatementMap, filterCondition)\n    }\n\n    /**\n     * Returns a list of AccountStatements sorted on data, ascending\n     */\n    @memoize()\n    get accountStatements(): AccountStatement[] {\n        return sortedArray(Object.values(this.data), data => new AccountBalance(data.closingBalanceData).date.id)\n            .map(data => new AccountStatement(data))\n    }\n\n    /**\n     * Returns the AccountStatement with the given id\n     */\n    getAccountStatement(id: string): AccountStatement {\n        return this.getItem(AccountStatement, id)\n    }\n}","import { AccountStatement } from \"./AccountStatement\"\nimport { AccountBalance } from \"./AccountBalance\"\nimport { LedgerScheme } from \"../Ledger/LedgerScheme\"\nimport {\n    AccountBalanceData,\n    BankAccountData,\n    StatementEntryData,\n    PlainAccountStatementData\n} from \"../../model\"\nimport { LedgerAccount } from \"../Ledger/LedgerAccount\"\nimport { StatementEntryMap } from \"./StatementEntryMap\"\nimport { IBAN } from \"../IBAN\"\nimport { StatementEntry } from \"./StatementEntry\"\nimport { AccountStatementMap } from \"./AccountStatementMap\"\n\n/**\n * A bank account is a financial account maintained by a bank or other financial institution\n * in which the financial transactions between the bank and a customer are recorded\n */\nexport class BankAccount {\n\n    constructor(readonly data: BankAccountData) {}\n\n    /**\n     * The unique identification of the BankAccount\n     */\n    get id(): string { return this.data.id }\n\n    /**\n     * Returns the international bank account number (IBAN) of the BankAccount\n     *\n     * A standard international numbering system for individual bank accounts around the world\n     */\n    get IBAN(): IBAN { return new IBAN(this.data.id) }\n\n    /**\n     * Returns the LedgerAccount that is associated with the BankAccount\n     */\n    get ledgerAccount() { return LedgerScheme.getAccount(this.data.ledgerAccountCode) }\n\n    /**\n     * Add a statement and its entries to the BankAccount\n     *\n     * If the statement of an entry already exists it will be skipped\n     * Only new statements and entries will be registered\n     */\n    public add(statement: PlainAccountStatementData,\n               entries: StatementEntryData[]): [ AccountStatement | null, StatementEntry[]] {\n        let newStatement : AccountStatement | null = null\n        const newEntries: StatementEntry[] = []\n\n        const statementId = statement.id\n        if (!this.data.accountStatementMapData[statementId]) {\n            // Add new statement\n            newStatement = new AccountStatement(statement)\n            this.data.accountStatementMapData[statementId] = newStatement.data\n        }\n\n        entries.forEach(entryData => {\n            const entryId = entryData.id\n            if (!this.data.statementEntryMapData[entryId]) {\n                // Add new statement entries\n                const newEntry = new StatementEntry(entryData)\n                this.data.statementEntryMapData[entryData.id] = newEntry.data\n                newEntries.push(newEntry)\n            }\n        })\n\n        return [ newStatement, newEntries ]\n    }\n\n    /**\n     * Returns a Record of statements indexed by statement id\n     */\n    get accountStatementMap(): AccountStatementMap {\n        return new AccountStatementMap(this.data.accountStatementMapData)\n    }\n\n    /**\n     * Returns a Record of statementEntries indexed by entry id\n     */\n    get statementEntryMap() {\n        return new StatementEntryMap(this.data.statementEntryMapData)\n    }\n\n    /**\n     * Returns the oldest begin balance of the bankAccount\n     */\n    public beginBalance(): AccountBalance | null {\n        let result: Partial<AccountBalanceData> = {}\n        const statements = Object.values(this.data.accountStatementMapData)\n        statements.forEach(statement => {\n            if (!result.date || statement.openingBalanceData.date < result.date) {\n                result.date = statement.openingBalanceData.date\n                result.amountData = statement.openingBalanceData.amountData\n            }\n        })\n        return result.date ? new AccountBalance(result as AccountBalanceData) : null\n    }\n\n    /**\n     * Returns the latest end balance of the bankAccount\n     */\n    public endBalance(): AccountBalance | null {\n        let result: Partial<AccountBalanceData> = {}\n        const statements = Object.values(this.data.accountStatementMapData)\n        statements.forEach(statement => {\n            if (!result.date || statement.closingBalanceData.date > result.date) {\n                result.date = statement.closingBalanceData.date\n                result.amountData = statement.closingBalanceData.amountData\n            }\n        })\n        return result.date ? new AccountBalance(result as AccountBalanceData) : null\n    }\n\n    /**\n     * Updates the LedgerAccount that is associated with the BankAccount\n     */\n    set ledgerAccount(ledgerAccount: LedgerAccount) {\n        this.data.ledgerAccountCode = ledgerAccount.code\n    }\n}\n","import { BankAccount } from \"./BankAccount\"\nimport { PeriodFilter } from \"../PeriodFilter\"\nimport {\n    BankAccountData,\n    BankImportStatementData,\n    BankAccountMapData,\n    StatementEntryMapData,\n    AccountStatementMapData\n} from \"../../model\"\nimport { StatementEntryMap } from \"./StatementEntryMap\"\nimport { AccountStatementMap } from \"./AccountStatementMap\"\nimport { AccountBalance } from \"./AccountBalance\"\nimport { Amount } from \"../Amount\"\nimport { DataMapping } from \"../DataMapping\"\nimport { AccountStatement } from \"./AccountStatement\"\nimport { StatementEntry } from \"./StatementEntry\"\nimport { clear, memoize } from \"../../services/memoize\"\n\ntype AccountBalanceMap = Record<string, {\n    beginBalance: AccountBalance | null,\n    endBalance: AccountBalance | null\n}>\n\n/**\n * LiquidAssets\n *\n * A liquid asset is an asset that can easily be converted into cash in a short amount of time\n * In the current implementation the only LiquidAssets are BankAccounts\n */\nexport class LiquidAssets extends DataMapping<BankAccountMapData, BankAccountData> {\n\n    /**\n     * Returns the LiquidAssets hold in BankAccounts\n     */\n    get bankAccounts(): BankAccount[] { return this.getItems(BankAccount) }\n\n    /**\n     * Returns the BankAccount with the given id\n     * @param id\n     */\n    getBankAccount(id: string): BankAccount { return this.getItem(BankAccount, id) }\n\n    /**\n     * Returns LiquidAssets with assets that match the given periodFilter\n     */\n    filterOnPeriod(filter: PeriodFilter): LiquidAssets {\n        return this.modify(LiquidAssets,(bankAccountData) => {\n            const accountStatements = new AccountStatementMap(bankAccountData.accountStatementMapData)\n            const statementEntries = new StatementEntryMap(bankAccountData.statementEntryMapData)\n            return {\n                ...bankAccountData,\n                accountStatementMapData: accountStatements.filterOnPeriod(filter).data,\n                statementEntryMapData: statementEntries.filterOnPeriod(filter).data\n            }\n        })\n    }\n\n    /**\n     * Returns the total of all beginBalances and all endBalances\n     */\n    getTotals(balances: AccountBalanceMap): [Amount, Amount] {\n        return Object.values(balances).reduce(([begin, end], balance) => {\n            if (balance.beginBalance !== null) {\n                begin = begin.add(balance.beginBalance.amount)\n            }\n            if (balance.endBalance !== null) {\n                end = end.add(balance.endBalance.amount)\n            }\n            return [begin, end]\n        }, [new Amount(), new Amount()])    }\n\n    /**\n     * Returns a Record of begin- and enBalance per bankAccount\n     */\n    getBalances(): AccountBalanceMap {\n        return this.bankAccounts.reduce((result, bankAccount) => {\n            result[bankAccount.id] = {\n                beginBalance: bankAccount.beginBalance(),\n                endBalance: bankAccount.endBalance()\n            }\n            return result\n        }, {} as AccountBalanceMap)\n    }\n\n    @memoize()\n    /**\n     * Returns a Record of AccountStatements indexed by their id\n     */\n    getAccountStatementMap(): AccountStatementMap {\n        const data = this.bankAccounts.reduce((result, bankAccount) => {\n            result = {\n                ...result,\n                ...bankAccount.data.accountStatementMapData\n            }\n            return result\n        }, {} as AccountStatementMapData)\n        return new AccountStatementMap(data)\n    }\n\n    /**\n     * Returns the AccountStatement with the given id\n     * @param id\n     */\n    getAccountStatement(id: string) {\n        return this.getAccountStatementMap().getAccountStatement(id)\n    }\n\n    @memoize()\n    /**\n     * Returns a Record of StatementEntries indexed by their id\n     */\n    getStatementEntryMap(): StatementEntryMap {\n        const data = this.bankAccounts.reduce((result, bankAccount) => {\n            result = {\n                ...result,\n                ...bankAccount.data.statementEntryMapData\n            }\n            return result\n        }, {} as StatementEntryMapData)\n        return new StatementEntryMap(data)\n    }\n\n    /**\n     * Returns the StatementEntry with the given id\n     * @param id\n     */\n    getStatementEntry(id: string) {\n        return this.getStatementEntryMap().getStatementEntry(id)\n    }\n\n    @clear()\n    addBankImportStatement(statementData: BankImportStatementData): {\n        bankAccount: BankAccount,\n        accountStatement: AccountStatement | null,\n        statementEntries: StatementEntry[]\n    } {\n        const bankAccountId = statementData.bankAccountData.id\n        this.addItemIfNotExists(bankAccountId, {\n            ...statementData.bankAccountData,\n            accountStatementMapData: {},\n            statementEntryMapData: {}\n        })\n\n        const bankAccount = this.getItem(BankAccount, bankAccountId)\n        const [ accountStatement, statementEntries] = bankAccount.add(statementData.accountStatementData,\n                                                                      statementData.statementEntriesData)\n        return { bankAccount, accountStatement, statementEntries }\n    }\n}\n","import { LedgerAllocationMapData } from \"../../model\"\nimport { PeriodFilter } from \"../PeriodFilter\"\nimport { LedgerAllocation } from \"./LedgerAllocation\"\nimport { StatementEntry } from \"../LiquidAssets/StatementEntry\"\nimport { Accounting } from \"../Accounting\"\nimport { JournalEntry } from \"../Journal/JournalEntry\"\nimport { LedgerAccount, UNMAPPED_ACCOUNT } from \"../Ledger/LedgerAccount\"\nimport { BankAccount } from \"../LiquidAssets/BankAccount\"\nimport { Period } from \"../Period\"\nimport assert from \"assert\"\n\n/**\n * Record of LedgerAllocations indexed by id\n */\nexport class LedgerAllocationMap {\n    constructor(readonly data: LedgerAllocationMapData) {}\n\n    private static get accounting() { return new Accounting() }\n\n    /**\n     * Get a LedgerAllocation by id\n     */\n    getAllocation(id: string): LedgerAllocation {\n        // assert(id in this.data)\n        return new LedgerAllocation(this.data[id])\n    }\n\n    /**\n     * Tells whether an allocation with the given id exists in the map\n     * @param id\n     */\n    hasAllocation(id: string): boolean {\n        return id in this.data\n    }\n\n    /**\n     * Get all LedgerAllocations\n     */\n    get allocations(): LedgerAllocation[] {\n        return Object.values(this.data).map(data => new LedgerAllocation(data))\n    }\n\n    /**\n     * Tells the number of ledgerAllocations in the map\n     */\n    get length(): number {\n        return Object.keys(this.data).length\n    }\n\n    /**\n     * Returns a new LedgerAllocationMap with keys sorted on the sortKey of the LedgerAllocations\n     */\n    sorted(): LedgerAllocationMap {\n        const sortedAllocations = this.allocations.sort(LedgerAllocation.sort)\n        const data = sortedAllocations.reduce((result, allocation) => {\n            result[allocation.id] = allocation.data\n            return result\n        }, {} as LedgerAllocationMapData)\n        return new LedgerAllocationMap(data)\n    }\n\n    /**\n     * Get all ledgerAccounts that are used in at least 1 ledgerAllocation\n     */\n    getLedgerAccounts(): LedgerAccount[] {\n        const result = this.allocations.reduce((result, allocation) => {\n            const ledgerAccount = allocation.ledgerAccount\n            result[ledgerAccount.code] = allocation.ledgerAccount\n            return result\n        }, {} as Record<string, LedgerAccount>)\n        return Object.values(result)\n    }\n\n    /**\n     * Get all periods that are used in at least 1 ledgerAllocation\n     */\n    getPeriods(): Period[] {\n        const result = this.allocations.reduce((result, allocation) => {\n            const period = allocation.period\n            result[period.string] = period\n            return result\n        }, {} as Record<string, Period>)\n        return Object.values(result)\n    }\n\n    /**\n     * Gets the number of mapped and yet unmapped ledgerAllocations\n     */\n    getMappedUnmapped(): [number, number] {\n        return Object.values(this.data)\n            .reduce(([mapped, unmapped], allocationData): [number, number] => {\n                const ledgerAccount = new LedgerAllocation(allocationData).ledgerAccount\n                if (ledgerAccount.isUnmapped()) {\n                    unmapped++\n                } else {\n                    mapped++\n                }\n                return [mapped, unmapped]\n            }, [0, 0])\n    }\n\n    /**\n     * Return a new LedgerAllocationMap that holds only ledgerAllocations that match the given filter\n     */\n    filterOnPeriod(periodFilter: PeriodFilter): LedgerAllocationMap {\n        const data = Object.fromEntries(\n            Object.entries(this.data)\n                .filter(([_, allocationData]) => {\n                    const allocation = new LedgerAllocation(allocationData)\n                    const parentData = allocationData.parentRef && this.data[allocationData.parentRef]\n                    const parent = parentData && new LedgerAllocation(parentData)\n                    const children = allocationData.childrenRefs.map(c => new LedgerAllocation(this.data[c]))\n                    return periodFilter.periodInRange(allocation.period) ||\n                        (parent && periodFilter.periodInRange(parent.period)) ||\n                        (children.some(c => periodFilter.periodInRange(c.period)))\n                })\n        )\n        return new LedgerAllocationMap(data)\n    }\n\n    /**\n     * Update the ledgerAllocations in the map for the ledgerAccount of the given bankAccount\n     *\n     * All parent ledgerAllocations that are bound to statementEntry of the given bankAccount\n     * are updated for the new ledgerAccount of the given bankAccount\n     */\n    updateStatementEntries(bankAccount: BankAccount) {\n        const statementEntries = bankAccount.statementEntryMap\n        this.allocations.forEach(allocation => {\n            if (!allocation.hasParent() && statementEntries.contains(allocation.statementEntry)) {\n                allocation.journalEntry.oppositeLeg.ledgerAccount = bankAccount.ledgerAccount\n            }\n        })\n    }\n\n    /**\n     * Add ledgerAllocations for the given statementEntries\n     *\n     * Each new ledgerAllocation is bound to a statementEntry and is unmapped\n     */\n    addStatementEntries(bankAccount: BankAccount, statementEntries: StatementEntry[]) {\n        statementEntries.forEach(entry => {\n            const allocation = LedgerAllocation.fromStatementEntry(entry)\n            const period = Period.fromDate(entry.valueDate)\n            this.add(allocation, bankAccount.ledgerAccount, period)\n        })\n    }\n\n    /**\n     * Adds an allocation to the map\n     *\n     * The opposite account is normally the ledgerAccount of the bankAccount\n     */\n\n    private add(allocation: LedgerAllocation, oppositeAccount: LedgerAccount, period: Period): void {\n        // Add allocation, do not overwrite\n        if (!this.data[allocation.id]) {\n            this.data[allocation.id] = allocation.data\n\n            const entry = allocation.statementEntry\n            const journalEntry = JournalEntry.fromAllocation(\n                allocation.id,\n                entry.amount,\n                entry.valueDate,\n                period,\n                entry.description,\n                UNMAPPED_ACCOUNT,\n                oppositeAccount)\n            LedgerAllocationMap.accounting.journal.add(journalEntry)\n\n            allocation.journalEntry = journalEntry\n        }\n    }\n\n    /**\n     * Add a child to the ledgerAllocationMap\n     */\n    addChild(parent: LedgerAllocation, child: LedgerAllocation, period: Period) {\n        this.add(child, parent.ledgerAccount, period)\n        parent.addChild(child)\n    }\n\n    /**\n     * Removes a child\n     *\n     * The child is removed from the parent and the child is removed from the map\n     */\n    removeChild(child: LedgerAllocation) {\n        assert(child.parent)\n        child.parent.removeChild(child)\n        this.remove(child)\n    }\n\n    /**\n     * Removes an allocation from the map\n     */\n    private remove(allocation: LedgerAllocation): void {\n        delete this.data[allocation.id]\n        LedgerAllocationMap.accounting.journal.remove(allocation.journalEntry)\n    }\n\n    /**\n     * Returns unmapped allocations that are bound to the given entries\n     */\n    private getUnallocatedEntries(entries: StatementEntry[]): LedgerAllocation[] {\n        return entries\n            .map(entry => this.getAllocation(entry.id))\n            .filter(allocation => allocation.ledgerAccount.isUnmapped())\n    }\n\n    /**\n     * Get a list of similar allocations\n     *\n     * Child allocations do not have similar allocations\n     * For an unmapped allocation the allocations that are bound to similar statementEntries are returned\n     * For a mapped allocation the allocations that are bound to the same ledgerAccount are returned\n     */\n    getSimilarAllocations(allocation: LedgerAllocation): LedgerAllocation[] {\n        if (allocation.hasParent()) {\n            // Similarity is at parent level, child allocations do not have similar allocations\n            return []\n        } else if (allocation.ledgerAccount.isUnmapped()) {\n            // Return all similar unmapped allocations (bound to similar statementEntries)\n            const statements = new Accounting().liquidAssets.getStatementEntryMap()\n            const entries = statements.getSimilarEntries(allocation.statementEntry)\n            return this.getUnallocatedEntries(entries)\n        } else {\n            // Return all allocations that are booked on the same account\n            return this.allocations.filter(a => a.ledgerAccount.equals(allocation.ledgerAccount))\n        }\n    }\n}","import { AccountingState } from \"../app/AccountingSlice\"\nimport { Journal } from \"./Journal/Journal\"\nimport { LiquidAssets } from \"./LiquidAssets/LiquidAssets\"\nimport { LedgerAllocationMap } from \"./Allocation/LedgerAllocationMap\"\nimport {\n    AccountingMetaData,\n    BankAccountData,\n    BankImportStatementData,\n    JournalEntryData,\n    LedgerAccountData,\n    LedgerAllocationData,\n    VATSpecificationData\n} from \"../model\"\nimport { LedgerScheme } from \"./Ledger/LedgerScheme\"\nimport { Period } from \"./Period\"\nimport { JournalEntry } from \"./Journal/JournalEntry\"\nimport { memoize } from \"../services/memoize\"\n\nexport class Accounting {\n    /**\n     * Current state is a class property\n     * Set on every instantiation\n     * - Allows reducers to work on the Draft<State> model\n     * - Allows components to work on the current State model (set by middleware)\n     */\n    private static _CurrentState: AccountingState\n\n    constructor(data?: AccountingState) {\n        if (data) {\n            // Used by reducers to work on writable draft-state\n            Accounting.State = data\n        }   // Else use the current state\n    }\n\n    static get State(): AccountingState {\n        return this._CurrentState\n    }\n\n    static set State(state: AccountingState) {\n        // Explicitly set the state (post-action in redux middleware)\n        this._CurrentState = state\n    }\n\n    /**\n     * The currency is determined by the currency of the first allocated statement entry\n     */\n    @memoize()\n    static get currency(): string {\n        return new Accounting().allocations.allocations[0].statementEntry.amount.currency\n    }\n\n    /**\n     * Returns the journal (dictionary of journalEntries)\n     */\n    get journal() { return new Journal(Accounting.State.journalData) }\n\n    /**\n     * Returns the liquid assets (dictionary of bank accounts\n     */\n    get liquidAssets() { return new LiquidAssets(Accounting.State.liquidAssetsData) }\n\n    /**\n     * Returns the allocations (dictionary of allocations)\n     *\n     * Allocations connect a statement entry of a bank account to a ledger account\n     */\n    get allocations() { return new LedgerAllocationMap(Accounting.State.ledgerAllocationsData) }\n\n    setMetaData(metaData: AccountingMetaData) {\n        /**\n         * Update the metadata (name)\n         */\n        Accounting._CurrentState.accountingMetaData = metaData\n    }\n\n    addStatements(statementsData: BankImportStatementData[]) {\n        /**\n         * Add bankAccount statements and its statementEntries\n         */\n        statementsData.forEach(statementData => {\n            const { bankAccount, statementEntries } = this.liquidAssets.addBankImportStatement(statementData)\n            this.allocations.addStatementEntries(bankAccount, statementEntries)\n        })\n        Accounting._CurrentState.ledgerAllocationsData = this.allocations.sorted().data\n    }\n\n    deleteJournalEntry(journalEntryData: JournalEntryData) {\n        if (this.journal.hasJournalEntry(journalEntryData.id)) {\n            // Remove any existing journalEntry with the same id\n            this.journal.remove(this.journal.getJournalEntry(journalEntryData.id))\n        }\n    }\n\n    updateJournalEntry(journalEntryData: JournalEntryData) {\n        // Remove any existing journalEntry with the same id\n        this.deleteJournalEntry(journalEntryData)\n        // Add the journalEntry to the journal\n        this.journal.add(new JournalEntry(journalEntryData))\n    }\n\n    linkBankAccount(bankAccountData: BankAccountData, ledgerAccountData: LedgerAccountData) {\n        /**\n         * Associate a bankAccount with a (Balance) ledgerAccount\n         */\n        const ledgerAccount = LedgerScheme.getAccount(ledgerAccountData.Referentiecode)\n        const bankAccount = this.liquidAssets.getBankAccount(bankAccountData.id)\n        bankAccount.ledgerAccount = ledgerAccount\n        this.allocations.updateStatementEntries(bankAccount)\n    }\n\n    setPeriod(allocationData: LedgerAllocationData, period: string) {\n        /**\n         * Setting a period splits an allocation in two parts:\n         * - The original allocation gets associated with an accruals account\n         * - A new allocation will be made with the new period and the original account\n         * If the period of a split allocation is set back to its original value\n         * then the split will be undone\n         */\n        const allocation = this.allocations.getAllocation(allocationData.id)\n        allocation.period = new Period(period)\n    }\n\n    setReason(allocationData: LedgerAllocationData, reason: string) {\n        /**\n         * Change the reason (description) of a journalEntry\n         */\n        const allocation = this.allocations.getAllocation(allocationData.id)\n        allocation.reason = reason\n    }\n\n    setLedgerAccount(allocationsData: LedgerAllocationData[], accountCode: string) {\n        /**\n         * Change the ledgerAccount of a set of allocations\n         */\n        const ledgerAccount = LedgerScheme.getAccount(accountCode)\n        allocationsData.forEach(allocationData => {\n            const allocation = this.allocations.getAllocation(allocationData.id)\n            allocation.ledgerAccount = ledgerAccount\n        })\n    }\n\n    setVAT(allocationData: LedgerAllocationData, vatSpecificationData: VATSpecificationData) {\n        /**\n         * Specifies the VAT or deletes the VAT for the allocation\n         */\n        const allocation = this.allocations.getAllocation(allocationData.id)\n        allocation.setVAT(vatSpecificationData)\n    }\n}","import { LedgerAllocationData, VATSpecificationData } from \"../../model\"\n\nimport { LedgerAccount } from \"../Ledger/LedgerAccount\"\nimport { StatementEntry } from \"../LiquidAssets/StatementEntry\"\nimport { JournalEntry } from \"../Journal/JournalEntry\"\nimport { Accounting } from \"../Accounting\"\nimport { arrayRemoveElement } from \"../../services/utils\"\nimport { Period } from \"../Period\"\nimport { LedgerScheme } from \"../Ledger/LedgerScheme\"\nimport { AllocationFilter } from \"../AllocationFilter\"\nimport { Amount } from \"../Amount\"\n\n/**\n * LedgerAllocation\n *\n * Allocate a BankAccount StatementEntry to a LedgerAccount\n * Creates a JournalEntry with two legs:\n * - AllocatedLeg for the allocation of the deposit or withdrawal of the BankAccount\n * - OppositeLeg for the BankAccount booking\n */\nexport class LedgerAllocation {\n    constructor(readonly data: LedgerAllocationData) {}\n\n    /**\n     * Unique identification of the LedgerAllocation\n     */\n    get id(): string { return this.data.id }\n\n    /**\n     * Gets access to the Accounting environment in which the allocation lives\n     */\n    private static get accounting() { return new Accounting() }\n\n    /**\n     * A reference to the JournalEntry for this allocation\n     */\n    private get journalEntryRef(): string { return this.data.journalEntryRef }\n\n    /**\n     * A reference to the BankAccount StatementEntry for this allocation\n     */\n    private get statementEntryRef(): string { return this.data.statementEntryRef }\n\n    /**\n     * A reference to any parent of this allocation\n     *\n     * When an allocation is assigned a new period it is split in two allocations\n     * The parent is the original allocation, the child is the new (splitted) allocation in the new period\n     */\n    get parentRef(): string | null { return this.data.parentRef }\n\n    /**\n     * A reference to any children of this allocation\n     *\n     * When an allocation is assigned a new period it is split in two allocations\n     * The parent is the original allocation, the child is the new (splitted) allocation in the new period\n     */\n    get childrenRefs(): string[] { return this.data.childrenRefs }\n\n    /**\n     * The parent LedgerAllocation for this allocation\n     */\n    get parent(): LedgerAllocation | null {\n        if (this.parentRef !== null) {\n            return LedgerAllocation.accounting.allocations.getAllocation(this.parentRef)\n        }\n        return null\n    }\n\n    /**\n     * A virtual attribute to allow sorting allocations\n     *\n     * Sorting is on the date of the statementEntry and the id of the allocation\n     * Sorting on id takes care that parents come before any children\n     */\n    get sortKey(): string { return this.statementEntry.valueDate.string + \".\" + this.id }\n\n    /**\n     * Sort method for ledgerAllocation\n     *\n     * Compares two ledgerAllocations on the basis of their sortKey\n     */\n    static sort(a1: LedgerAllocation, a2: LedgerAllocation) {\n        const s1 = a1.sortKey\n        const s2 = a2.sortKey\n        return s1 < s2 ? -1 : s1 > s2 ? 1 : 0\n    }\n\n    /**\n     * Returns a list of LedgerAllocations that are children of this allocation\n     */\n    get children() : LedgerAllocation[] {\n        return this.childrenRefs.map(id => LedgerAllocation.accounting.allocations.getAllocation(id))\n    }\n\n    /**\n     * Returns the period for this allocation, being the period of the associated JournalEntry\n     */\n    get period(): Period {\n        return this.journalEntry.period\n    }\n\n    /**\n     * Returns the ledgerAccount for this allocation\n     * Being the ledgerAccount of the allocated leg of the associated JournalEntry\n     */\n    get ledgerAccount(): LedgerAccount {\n        return this.journalEntry.allocatedLeg.ledgerAccount\n    }\n\n    /**\n     * Returns the code of the ledgerAccount for this allocation\n     * Being the code of the ledgerAccount of the allocated leg of the associated JournalEntry\n     */\n    get ledgerAccountCode(): string {\n        return this.journalEntry.allocatedLeg.ledgerAccountCode\n    }\n\n    /**\n     * Returns the statementEntry for this allocation\n     */\n    get statementEntry(): StatementEntry {\n        return LedgerAllocation.accounting.liquidAssets.getStatementEntry(this.statementEntryRef)\n    }\n\n    /**\n     * Returns the journalEntry for this allocation\n     */\n    get journalEntry(): JournalEntry {\n        return LedgerAllocation.accounting.journal.getJournalEntry(this.journalEntryRef)\n    }\n\n    /**\n     * Returns the amount that has been allocated by this allocation\n     */\n    get amount(): Amount {\n        return this.journalEntry.allocatedLeg.amount\n    }\n\n    /**\n     * Tells whether this allocation is equal to another allocation\n     * @param other\n     */\n    equals(other: LedgerAllocation) {\n        return other.id === this.id\n    }\n\n    /**\n     * Tells whether this allocation has any children\n     */\n    hasChildren() : boolean { return this.data.childrenRefs.length > 0}\n\n    /**\n     * Tells whether this allocation has a parent\n     */\n    hasParent(): boolean { return this.data.parentRef !== null }\n\n    /**\n     * Tells whether the allocation matches the given allocationFilter\n     *\n     * In order to match period and ledgerAccount should match (if set in the filter)\n     */\n    matches(allocationFilter: AllocationFilter): boolean {\n        const { period, ledgerAccountCode } = allocationFilter\n        return ((period === null || period.equals(this.period)) &&\n                (ledgerAccountCode === null || ledgerAccountCode === this.ledgerAccountCode))\n    }\n\n    /**\n     * Creates a new LedgerAllocation from a BankAccount StatementEntry\n     */\n    static fromStatementEntry(entry: StatementEntry): LedgerAllocation {\n        return new LedgerAllocation({\n            id: entry.id,\n            statementEntryRef: entry.id,\n            journalEntryRef: \"\",\n            parentRef: null,\n            childrenRefs: []\n        })\n    }\n\n    /**\n     * Gets an id for a child ledgerAllocation\n     */\n    getSplitId(period: Period) { return `${this.id}.${period.string}` }\n\n    /**\n     * Splits an allocation\n     *\n     * Creates a new allocation in the given period\n     * The parent of the new allocation is set to this allocation\n     */\n    private splitAllocation(period: Period): LedgerAllocation {\n        const ledgerAllocationData: LedgerAllocationData = {\n            id: this.getSplitId(period),\n            statementEntryRef: this.statementEntry.id,\n            journalEntryRef: \"\",\n            parentRef: this.id,    // Connect child to parent\n            childrenRefs: []\n        }\n        return new LedgerAllocation(ledgerAllocationData)\n    }\n\n    /**\n     * Unsplit an allocation\n     *\n     * Removes the child from its parent\n     */\n    private unsplitAllocation(): void {\n        this.parent!.removeChild(this)\n    }\n\n    /**\n     * Updates the ledgerAccount of the allocation\n     *\n     * Any child will have a oppositeLeg that mirrors the allocatedLeg of the allocation\n     * The mirroring is established by updating the oppositeLegs of any children allocations\n     */\n    set ledgerAccount(ledgerAccount: LedgerAccount) {\n        // Update allocated leg\n        this.journalEntry.allocatedLeg.ledgerAccount = ledgerAccount\n\n        // Update any child entryLegsData\n        this.children.forEach(child => {\n            child.journalEntry.oppositeLeg.ledgerAccount = ledgerAccount\n        })\n    }\n\n    setVAT(vatSpecificationData: VATSpecificationData) {\n        this.journalEntry.setVAT(vatSpecificationData)\n    }\n\n    /**\n     * Updates the parent of the allocation\n     */\n    private set _parent(parent: LedgerAllocation) {\n        this.data.parentRef = parent.id\n    }\n\n    /**\n     * Sets the allocation period\n     *\n     * If the period is not equal to this period and the allocation has no children\n     * then the allocation is split:\n     * [bankAccontLedgerAccount, allocatedLedgerAccount] =>\n     * - [bankAccontLedgerAccount, AccrualsAccount] (parent)\n     * - [AccrualsAccount, allocatedLedgerAccount]  (child)\n     *\n     * If the period is equal to the parent period then the allocation is unsplit.\n     * The split is undone and the journalEntry gets the original value\n     *\n     */\n    set period(period: Period) {\n        if (period.equals(this.period)) return\n\n        const { allocations } = LedgerAllocation.accounting\n        const parent = this.parent\n        if (parent) {\n            if (period.equals(parent.period)) {\n                // unsplit this child\n                this.unsplitAllocation()\n                parent.ledgerAccount = this.ledgerAccount\n                allocations.removeChild(this)\n            } else {\n                // no subsplit, simply change period\n                this.journalEntry.period = period\n            }\n        } else {\n            if (this.hasChildren()) {\n                // no multi split allowed\n            } else {\n                // split\n                const child = this.splitAllocation(period)\n                allocations.addChild(this, child, period)\n                child.ledgerAccount = this.ledgerAccount\n                this.ledgerAccount = LedgerScheme.getAccrualsAccount(this.amount)\n            }\n        }\n    }\n\n    get reason() {\n        return this.journalEntry.reason\n    }\n\n    set reason(reason: string) {\n        if (this.reason !== reason) {\n            this.journalEntry.reason = reason\n            if (this.parent) {\n                this.parent.reason = reason\n            } else {\n                this.children.forEach(child => child.reason = reason)\n            }\n        }\n    }\n\n    set journalEntry(journalEntry: JournalEntry) {\n        this.data.journalEntryRef = journalEntry.id\n    }\n\n    addChild(child: LedgerAllocation) {\n        this.childrenRefs.push(child.id)\n        child._parent = this\n    }\n\n    removeChild(child: LedgerAllocation) {\n        arrayRemoveElement(this.childrenRefs, child.id)\n    }\n}\n\n","import { AllocationFilterData } from \"../model\"\nimport { Period } from \"./Period\"\nimport { LedgerAccount } from \"./Ledger/LedgerAccount\"\nimport { LedgerScheme } from \"./Ledger/LedgerScheme\"\n\n/**\n * Simple filter on period and account\n * Its data is used to be stored in the application state\n */\nexport class AllocationFilter {\n    constructor(public data: AllocationFilterData = { periodId: null, ledgerAccountCode: null}) {}\n\n    /**\n     * Returns the period on which is filtered, or null\n     */\n    get period(): Period | null {\n        const { periodId } = this.data\n        return periodId ? new Period(periodId) : null\n    }\n\n    /**\n     * Returns the ledgerAccount on which is filtered, or null\n     */\n    get ledgerAccount(): LedgerAccount | null {\n        const { ledgerAccountCode } = this.data\n        return ledgerAccountCode ? LedgerScheme.getAccount(ledgerAccountCode) : null\n    }\n\n    /**\n     * Returns the code of the ledgerAccount on which is filtered, or null\n     */\n    get ledgerAccountCode(): string | null {\n        const { ledgerAccountCode } = this.data\n        return ledgerAccountCode\n    }\n}","import { AccountingState } from \"../app/AccountingSlice\"\nimport { LedgerScheme, LedgerSchemeData } from \"./Ledger/LedgerScheme\"\nimport { Accounting } from \"./Accounting\"\n\n/**\n * This class stores a reference to the current Accounting data\n *\n * The class is used to transfer the current Accounting state to a Web Worker\n * The Web Worker runs in a separate thread and uses the environment to re-create any Accounting classes\n *\n */\n\nexport interface EnvironmentData {\n    ledgerScheme: LedgerSchemeData\n    state: AccountingState\n}\n\nexport class Environment {\n\n    constructor(data?: EnvironmentData) {\n        /**\n         * Without any data the current Accounting state is returned\n         */\n        if (data) {\n            /**\n             * With data; a Web Worker can re-create the accounting classes from any received environment data\n             */\n            const { ledgerScheme, state } = data\n\n            LedgerScheme.Data = ledgerScheme\n            Accounting.State = state\n        }\n    }\n\n    /**\n     * Get the current Accounting data\n     * This data can be passed to a Web Worker\n     */\n    get data(): EnvironmentData {\n        return {\n            ledgerScheme: LedgerScheme.Data,\n            state: Accounting.State\n        }\n    }\n}","import { expose } from 'comlink';\n  import _createForOfIteratorHelper from\"/home/vegter/projects/Boekhoud-Source/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";/* ./worker/worker.ts */import{LedgerAllocation}from\"../../types/Allocation/LedgerAllocation\";import{AllocationFilter}from\"../../types/AllocationFilter\";import{Environment}from\"../../types/Environment\";import{BankAccount}from\"../../types/LiquidAssets/BankAccount\";import{getBankAccountData}from\"../Charts\";export function getBankAccountChartData(environment,_bankAccount){new Environment(environment);var bankAccount=new BankAccount(_bankAccount.data);return getBankAccountData(bankAccount);}export function getAllocationRows(environment,_allocations,viewPort,_allocationFilter){new Environment(environment);var allocationFilter=new AllocationFilter(_allocationFilter.data);var showRows=[];var _iterator=_createForOfIteratorHelper(_allocations),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _allocation=_step.value;var allocation=new LedgerAllocation(_allocation.data);// Maximize number of rows to the current viewPort\nif(showRows.length>=viewPort)break;// Handle children with its parent\nif(allocation.hasParent())continue;// Match against the current filter\nif(!(allocation.matches(allocationFilter)||allocation.children.some(function(c){return c.matches(allocationFilter);})))continue;// Add the parent and its children to the rows\nshowRows.push(allocation);allocation.children.forEach(function(child){return showRows.push(child);});}}catch(err){_iterator.e(err);}finally{_iterator.f();}return showRows;};\n  expose(\n    Object.keys(__webpack_exports__).reduce(function(r,k){\n      if (k=='__esModule') return r;\n      r[k] = __webpack_exports__[k];\n      return r\n    },{})\n  )","import { BankAccount } from \"../../types/LiquidAssets/BankAccount\"\nimport { StatementEntry } from \"../../types/LiquidAssets/StatementEntry\"\nimport { Amount } from \"../../types/Amount\"\nimport { LedgerAccount } from \"../../types/Ledger/LedgerAccount\"\nimport { AccountSummaryMap } from \"../../types/AccountSummaryMap\"\nimport { LiquidAssets } from \"../../types/LiquidAssets/LiquidAssets\"\nimport { DateString } from \"../../types/DateString\"\nimport { ExpenseRevenueChartData } from \"./ExpenseRevenueChart\"\nimport { LedgerAllocationMap } from \"../../types/Allocation/LedgerAllocationMap\"\nimport { ChartColor } from \"./config\"\n\nconst amountFormat = (value: number) => Amount.formatValue(value, {\n    maximumFractionDigits: 0,\n    minimumFractionDigits: 0\n})\n\nconst dateFormat = (value: DateString) => value.format({month: 'short', year: '2-digit'})\n\nexport function getQualitativeColor(i: number) {\n    return ChartColor.qualitativeColors[i % ChartColor.qualitativeColors.length]\n}\n\nexport function getPieChartOptions(title: string) {\n    return {\n        title: {\n            display: true,\n            text: title\n        }\n    }\n}\n\nexport function getLineChartOptions(title: string) {\n    return {\n        title: {\n            display: true,\n            text: title\n        },\n        tooltips: {\n            displayColors: false,\n            callbacks: {\n                title: function(tooltipItem: any, data: any) {\n                    const index = tooltipItem[0].index\n                    return data.labels[index].format()\n                },\n                label: function(tooltipItem: any) {\n                    return amountFormat(tooltipItem.yLabel);\n                }\n            }\n        },\n        legend: {\n            display: false,\n        },\n        scales: {\n            xAxes: [{\n                ticks: {\n                    callback: dateFormat\n                }\n            }],\n            yAxes: [{\n                ticks: {\n                    callback: amountFormat\n                }\n            }],\n        }\n    }\n}\n\nexport function getBarChartOptions(title: string) {\n    return {\n        tooltips: {\n            displayColors: false,\n            callbacks: {\n                label: function(tooltipItem: any, data: any) {\n                    let label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n                    if (label) {\n                        label += ' ';\n                    }\n                    label += amountFormat(tooltipItem.yLabel)\n                    return label;\n                }\n            }\n        },\n        title: {\n            display: true,\n            text: title\n        },\n        legend: {\n            fullWidth: false,\n            labels: {\n                fontSize: 10,\n                boxWidth: 10\n            }\n        },\n        scales: {\n            xAxes: [{\n            }],\n            yAxes: [{\n                ticks: {\n                    callback: amountFormat\n                }\n            }],\n        }\n    }\n}\n\nexport function getBankAccountData(bankAccount: BankAccount) {\n    const statementEntries = bankAccount.statementEntryMap.statementEntries\n\n    const getKey = (entry: StatementEntry) =>\n        entry.accountStatement.closingBalance.date.string\n\n    const getData = (entry: StatementEntry) => ({\n        label: entry.accountStatement.closingBalance.date,\n        value: entry.accountStatement.closingBalance.amount.value\n    })\n\n    const chartData = statementEntries.reduce((result, statementEntry) => {\n        const key = getKey(statementEntry)\n        if (!result[key]) {\n            result[key] = getData(statementEntry)\n        }\n        return result\n    }, {} as Record<string, ReturnType<typeof getData>>)\n\n    const keys = Object.keys(chartData).sort()\n\n    return keys.map(key => chartData[key])\n}\n\nexport function getProfitLossData(summaryMap: AccountSummaryMap, accounts: LedgerAccount[]) {\n\n    const getKey = (account: LedgerAccount) =>\n        account.code\n\n    const getData = (account: LedgerAccount) => ({\n        label: account.shortDescription,\n        value: summaryMap.getAccountSummary(account).balance\n    })\n\n    const chartData = accounts.reduce((result, account) => {\n        if (account.isBankAccount()) {\n            return result\n        }\n        const key = getKey(account)\n        const data = getData(account)\n        if (!result[key]) {\n            result[key] = getData(account)\n        } else {\n            result[key].value = result[key].value.add(data.value)\n        }\n        return result\n    }, {} as Record<string, ReturnType<typeof getData>>)\n\n    return Object.values(chartData)\n        .filter(v => ! v.value.isZero())\n        .sort((v1, v2) => Math.abs(v2.value.value) - Math.abs(v1.value.value))\n}\n\nexport function getAllocationsData(allocations: LedgerAllocationMap) {\n    const [mapped, unmapped] = allocations.getMappedUnmapped()\n\n    const mappedAllocations = (mapped / (mapped + unmapped)) * 100\n    const unmappedAllocations = 100 - mappedAllocations\n    const perc = (value: number) => `${Math.round(value,)}%`\n\n    const { warmGreen, warmRed } = ChartColor\n    const colors = [warmGreen, warmRed]\n\n    return {\n        labels: [\n            `Toegewezen ${perc(mappedAllocations)}`,\n            `Nog toe te wijzen ${perc(unmappedAllocations)}`\n        ],\n        datasets: [{\n            data: [\n                mapped,\n                unmapped\n            ],\n            backgroundColor: colors,\n            hoverBackgroundColor: colors\n        }]\n    };\n}\n\nexport function getCounterPartiesData(liquidAssets: LiquidAssets) {\n\n    const statementEntries = liquidAssets.getStatementEntryMap().statementEntries\n\n    const getKey = (entry: StatementEntry) =>\n        entry.relatedParties.toLowerCase().trim()\n\n    const getData = (entry: StatementEntry) => ({\n        label: entry.relatedParties,\n        value: entry.amount\n    })\n\n    const chartData = statementEntries.reduce((result, statementEntry) => {\n        const key = getKey(statementEntry)\n        const data = getData(statementEntry)\n        if (!result[key]) {\n            result[key] = data\n        } else {\n            result[key].value = result[key].value.add(data.value)\n        }\n        return result\n    }, {} as Record<string, ReturnType<typeof getData>>)\n\n    return Object.values(chartData)\n        .filter(v => v.label && ! v.value.isZero())\n        .sort((v1, v2) => Math.abs(v2.value.value) - Math.abs(v1.value.value))\n}\n\nexport function splitData(data: ExpenseRevenueChartData) {\n    return data.reduce((result, data) => {\n        if (data.value.isZero()) return result\n        if (data.value.value > 0) {\n            result[1].push(data)\n        } else {\n            result[0].push(data)\n        }\n        return result\n    }, [[], []] as [ExpenseRevenueChartData, ExpenseRevenueChartData])\n}\n\n\n"],"sourceRoot":""}